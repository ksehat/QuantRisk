{
    "server_config": {
        "sc-username": "Data Analysis 1",
        "sc-password": "DfGy^82@Nms",
        "sc_url": "https://etrm-ai.quantsys.com/security-service-1.0/",
        "base_url": "https://etrm-ai.quantsys.com/",
        "active_cache": false
    },
    "config": {
    "JobInformation": {
        "TradingCalendar": "1",
        "TimeZone": "152",
        "ContinuousTraining": false,
        "OperationalMode": "Real Time",
        "OperationalSchedule": "Continuous",
        "UsePreTrainedModel": null,
        "useLevels": null,
        "DataSource": "Static",
        "JobType": "Regression",
        "DataType": "TimeSeries",
        "Market": "16",
        "OutputWindowSize": 1,
        "featureImportance": false
    },
    "DataProcessing": {
        "MTSDefinition": {
            "Curves": [
                {
                    "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,LMP",
                    "CurvePhase": "20",
                    "CurveGrain": "2",
                    "StartDate": "2021-04-01 00:00:00",
                    "EndDate": "2021-08-20 23:59:59",
                    "Type": "absolute"
                },
                {
                    "CurveName": "MarketData:Node,7105643,Product,2,SubType,10,JsonKey,LMP",
                    "CurvePhase": "23",
                    "CurveGrain": "2",
                    "StartDate": "2021-08-04 00:00:00",
                    "EndDate": "2021-08-20 23:59:59",
                    "Type": "absolute"
                }
            ],
            "DateType": "relative",
            "Operation": "Merge"
        },
        "ExecutionInterval": {
            "DateType": "relative",
            "StartDate": "2021-08-21 00:00:00",
            "EndDate": "2021-08-24 00:59:59",
            "Type": "absolute"
        },
        "CurveDetails": [
            {
                "Label": "DAM_Congetion",
                "Property": {
                    "PredictorType": "External",
                    "CurveLabel": "DAM_Congetion",
                    "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Congestion",
                    "CurvePhase": "35",
                    "CurveGrain": "2",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": 0,
                    "ShiftRegion": "2",
                    "ShiftWeeklyPattern": false,
                    "ForwardCurve": [],
                    "FillForwardStrategy": "None",
                    "FillForwardOffset": 24,
                    "FillForwardRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "load",
                "Property": {
                    "PredictorType": "External",
                    "CurveLabel": "load",
                    "CurveName": "MarketData:Node,7105643,Product,2,Type,2,SubType,3",
                    "CurvePhase": "0",
                    "CurveGrain": "2",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": 0,
                    "ShiftRegion": "2",
                    "ShiftWeeklyPattern": false,
                    "ForwardCurve": [],
                    "FillForwardStrategy": "None",
                    "FillForwardOffset": 24,
                    "FillForwardRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "DAM_loss",
                "Property": {
                    "PredictorType": "External",
                    "CurveLabel": "DAM_loss",
                    "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Loss",
                    "CurvePhase": "35",
                    "CurveGrain": "2",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": 0,
                    "ShiftRegion": "2",
                    "ShiftWeeklyPattern": false,
                    "ForwardCurve": [],
                    "FillForwardStrategy": "PDSH",
                    "FillForwardOffset": 24,
                    "FillForwardRegion": "2",
                    "EnableVisualization": false
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "p1",
                "Property": {
                    "PredictorType": "MainTimeSeries",
                    "CurveLabel": "p1",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": -1,
                    "ShiftWeeklyPattern": false,
                    "ShiftRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "p2",
                "Property": {
                    "PredictorType": "MainTimeSeries",
                    "CurveLabel": "p2",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": -2,
                    "ShiftWeeklyPattern": false,
                    "ShiftRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": []
            },
            {
                "Label": "p24",
                "Property": {
                    "PredictorType": "MainTimeSeries",
                    "CurveLabel": "p24",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": -24,
                    "ShiftWeeklyPattern": false,
                    "ShiftRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": []
            },
            {
                "Label": "DAM_System",
                "Property": {
                    "PredictorType": "External",
                    "CurveLabel": "DAM_System",
                    "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,SystemEnergy",
                    "CurvePhase": "35",
                    "CurveGrain": "2",
                    "ShiftStrategy": "Simple",
                    "ShiftOffset": 0,
                    "ShiftRegion": "2",
                    "ShiftWeeklyPattern": false,
                    "ForwardCurve": [],
                    "FillForwardStrategy": "None",
                    "FillForwardOffset": 24,
                    "FillForwardRegion": "2",
                    "EnableVisualization": true
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "hour",
                "Property": {
                    "PredictorType": "Builtin",
                    "CurveLabel": "hour",
                    "IndicatorName": "1",
                    "EnableVisualization": false
                },
                "Processors": [
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "weekday",
                "Property": {
                    "PredictorType": "Builtin",
                    "CurveLabel": "weekday",
                    "IndicatorName": "2",
                    "EnableVisualization": false
                },
                "Processors": [
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": [
                    {
                        "Label": "Input2",
                        "window_size": 1
                    }
                ]
            },
            {
                "Label": "Target",
                "Property": {
                    "PredictorType": "MainTimeSeries",
                    "CurveLabel": "Target",
                    "OutputCurveName": "MarketData:Node,7105643,Product,2,SubType,3",
                    "OutputCurvePhase": "22",
                    "TargetType": "Value",
                    "BinaryThreshold": null,
                    "FillForwardStrategy": "UseForecastedValue",
                    "EnableVisualization": false,
                    "ForwardCurve": []
                },
                "Processors": [
                    {
                        "Action": "GapFilling",
                        "Method": "LinearInterpolation",
                        "HandleNansAtTheBeginning": {
                            "Method": "Drop",
                            "CurvePhase": null
                        },
                        "HandleNansAtTheEnd": {
                            "Method": "UseSelectedMethod",
                            "CurvePhase": null
                        }
                    },
                    {
                        "Action": "ExportForFormula"
                    },
                    {
                        "Action": "Scaling",
                        "Method": "ZScore"
                    }
                ],
                "Input": []
            }
        ]
    },
    "ai": {
        "draw2dStructure": [
            {
                "type": "VerticalLayout",
                "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                "x": 218.59375,
                "y": 44.625,
                "width": 71,
                "height": 56,
                "alpha": 1,
                "selectable": true,
                "draggable": true,
                "angle": 0,
                "userData": {
                    "layout": [
                        {
                            "name": "booster",
                            "data": {
                                "type": "enum",
                                "values": [
                                    {
                                        "id": 0,
                                        "name": "gbtree",
                                        "value": "gbtree"
                                    },
                                    {
                                        "id": 1,
                                        "name": "dart",
                                        "value": "dart"
                                    },
                                    {
                                        "id": 2,
                                        "name": "gblinear",
                                        "value": "gblinear"
                                    }
                                ],
                                "default": "gbtree",
                                "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                "url": "",
                                "regex": "",
                                "label": "Booster",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "n_estimators",
                            "data": {
                                "type": "int",
                                "placeHolder": "Number Of Estimator",
                                "default": 100,
                                "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                "url": "",
                                "regex": "",
                                "label": "Number of Estimators",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "learning_rate",
                            "data": {
                                "type": "float",
                                "placeHolder": "Learning Rate",
                                "default": 0.3,
                                "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                "url": "",
                                "regex": "",
                                "label": "Learning Rate",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "gamma",
                            "data": {
                                "type": "float",
                                "placeHolder": "gamma",
                                "default": 0,
                                "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                "url": "",
                                "regex": "",
                                "label": "Gamma",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "max_depth",
                            "data": {
                                "type": "int",
                                "placeHolder": "Max Depth",
                                "default": 6,
                                "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                "url": "",
                                "regex": "",
                                "label": "Max Depth",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "min_child_weight",
                            "data": {
                                "type": "float",
                                "placeHolder": "Min Child Weight",
                                "default": 1,
                                "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                "url": "",
                                "regex": "",
                                "label": "Min Child Weight",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "max_delta_step",
                            "data": {
                                "type": "float",
                                "placeHolder": "Max Delta Step",
                                "default": 0,
                                "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                "url": "",
                                "regex": "",
                                "label": "Max Delta Step",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "subsample",
                            "data": {
                                "type": "float",
                                "placeHolder": "Subsample",
                                "default": 1,
                                "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                "url": "",
                                "regex": "",
                                "label": "Subsample",
                                "dependsOn": "booster",
                                "dependState": [
                                    "dart",
                                    "gbtree"
                                ]
                            }
                        },
                        {
                            "name": "reg_lambda",
                            "data": {
                                "type": "float",
                                "placeHolder": "Lambda",
                                "default": 0,
                                "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                "url": "",
                                "regex": "",
                                "label": "L2 Regularization Coefficient",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "reg_alpha",
                            "data": {
                                "type": "float",
                                "placeHolder": "Alpha",
                                "default": 0,
                                "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                "url": "",
                                "regex": "",
                                "label": "L1 Regularization Coefficient",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "base_score",
                            "data": {
                                "type": "float",
                                "placeHolder": "Base Score",
                                "default": 0.5,
                                "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                "url": "",
                                "regex": "",
                                "label": "Base Score",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "eval_metric",
                            "data": {
                                "type": "enum",
                                "values": [
                                    {
                                        "id": 0,
                                        "name": "rmse",
                                        "value": "rmse"
                                    },
                                    {
                                        "id": 1,
                                        "name": "rmsle",
                                        "value": "rmsle"
                                    },
                                    {
                                        "id": 2,
                                        "name": "mae",
                                        "value": "mae"
                                    },
                                    {
                                        "id": 3,
                                        "name": "mape",
                                        "value": "mape"
                                    }
                                ],
                                "default": "rmse",
                                "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                "url": "",
                                "regex": "",
                                "label": "Evaluation Metric",
                                "dependsOn": "",
                                "dependState": []
                            }
                        },
                        {
                            "name": "random_state",
                            "data": {
                                "type": "int",
                                "placeHolder": "Seed",
                                "default": 0,
                                "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                "url": "",
                                "regex": "",
                                "label": "Seed",
                                "dependsOn": "",
                                "dependState": []
                            }
                        }
                    ],
                    "data": {
                        "name": "XGBoost",
                        "type": "Ensemble",
                        "config": {
                            "booster": "gbtree",
                            "n_estimators": 200,
                            "learning_rate": 0.3,
                            "gamma": 0.8,
                            "max_depth": 6,
                            "min_child_weight": 1,
                            "max_delta_step": 0,
                            "subsample": 0.9,
                            "reg_lambda": 0,
                            "reg_alpha": 0,
                            "objective": "reg:squarederror",
                            "base_score": 0.5,
                            "eval_metric": "rmse",
                            "seed": 0,
                            "random_state": 0
                        }
                    },
                    "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                    "model": {
                        "name": "XGBoost",
                        "layout": [
                            {
                                "name": "booster",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "gbtree",
                                            "value": "gbtree"
                                        },
                                        {
                                            "id": 1,
                                            "name": "dart",
                                            "value": "dart"
                                        },
                                        {
                                            "id": 2,
                                            "name": "gblinear",
                                            "value": "gblinear"
                                        }
                                    ],
                                    "default": "gbtree",
                                    "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Booster",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "n_estimators",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Number Of Estimator",
                                    "default": 100,
                                    "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Number of Estimators",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "learning_rate",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Learning Rate",
                                    "default": 0.3,
                                    "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Learning Rate",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "gamma",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "gamma",
                                    "default": 0,
                                    "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Gamma",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_depth",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Max Depth",
                                    "default": 6,
                                    "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Depth",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "min_child_weight",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Min Child Weight",
                                    "default": 1,
                                    "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                    "url": "",
                                    "regex": "",
                                    "label": "Min Child Weight",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_delta_step",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Max Delta Step",
                                    "default": 0,
                                    "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Delta Step",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "subsample",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Subsample",
                                    "default": 1,
                                    "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Subsample",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "reg_lambda",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Lambda",
                                    "default": 0,
                                    "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L2 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "reg_alpha",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Alpha",
                                    "default": 0,
                                    "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L1 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "base_score",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Base Score",
                                    "default": 0.5,
                                    "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Base Score",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "eval_metric",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "rmse",
                                            "value": "rmse"
                                        },
                                        {
                                            "id": 1,
                                            "name": "rmsle",
                                            "value": "rmsle"
                                        },
                                        {
                                            "id": 2,
                                            "name": "mae",
                                            "value": "mae"
                                        },
                                        {
                                            "id": 3,
                                            "name": "mape",
                                            "value": "mape"
                                        }
                                    ],
                                    "default": "rmse",
                                    "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Evaluation Metric",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "random_state",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Seed",
                                    "default": 0,
                                    "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Seed",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "nodeData": {
                            "name": "XGBoost",
                            "type": "Ensemble",
                            "config": {
                                "booster": "gbtree",
                                "n_estimators": 100,
                                "learning_rate": 0.3,
                                "gamma": 0,
                                "max_depth": 6,
                                "min_child_weight": 1,
                                "max_delta_step": 0,
                                "subsample": 1,
                                "reg_lambda": 0,
                                "reg_alpha": 0,
                                "objective": "reg:squarederror",
                                "base_score": 0.5,
                                "eval_metric": "rmse",
                                "seed": 0
                            }
                        },
                        "type": "Ensemble",
                        "multiple": false,
                        "inputFan": 100,
                        "outputFan": 10
                    },
                    "header": "Ensemble"
                },
                "cssClass": "labelModel",
                "ports": [
                    {
                        "type": "draw2d.InputPort",
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                        "width": 10,
                        "height": 10,
                        "alpha": 1,
                        "selectable": false,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "draw2d_InputPort",
                        "bgColor": "rgba(79,104,112,1)",
                        "color": "rgba(27,27,27,1)",
                        "stroke": 1,
                        "dasharray": null,
                        "maxFanOut": 100,
                        "name": "input0",
                        "semanticGroup": "global",
                        "port": "draw2d.InputPort",
                        "locator": "draw2d.layout.locator.InputPortLocator",
                        "locatorAttr": {}
                    },
                    {
                        "type": "draw2d.OutputPort",
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                        "width": 10,
                        "height": 10,
                        "alpha": 1,
                        "selectable": false,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "draw2d_OutputPort",
                        "bgColor": "rgba(79,104,112,1)",
                        "color": "rgba(27,27,27,1)",
                        "stroke": 1,
                        "dasharray": null,
                        "maxFanOut": 10,
                        "name": "output",
                        "semanticGroup": "global",
                        "port": "draw2d.OutputPort",
                        "locator": "draw2d.layout.locator.OutputPortLocator",
                        "locatorAttr": {}
                    }
                ],
                "bgColor": "rgba(3,102,214,1)",
                "color": "rgba(0,0,0,1)",
                "stroke": 1,
                "radius": 5,
                "dasharray": null,
                "gap": 0,
                "labels": [
                    {
                        "type": "TooltipFigure",
                        "id": "3e6f82ae-f81e-3c11-14ae-6afa9db4331d",
                        "x": 0,
                        "y": 1,
                        "width": 71,
                        "height": 29,
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "labelModelHeader",
                        "ports": [],
                        "bgColor": "rgba(3,102,214,1)",
                        "color": "rgba(255,255,255,1)",
                        "stroke": 0,
                        "radius": 6,
                        "dasharray": null,
                        "text": "Ensemble",
                        "outlineStroke": 0,
                        "outlineColor": "rgba(0,0,0,0)",
                        "fontSize": 12,
                        "fontColor": "rgba(255,255,255,1)",
                        "fontFamily": null
                    },
                    {
                        "type": "TooltipFigure",
                        "id": "9b2bde84-caac-1664-0ecf-1292abd59ff6",
                        "x": 0,
                        "y": 30,
                        "width": 71,
                        "height": 25,
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "TooltipFigure",
                        "ports": [],
                        "bgColor": "rgba(255,255,255,1)",
                        "color": "rgba(0,0,0,1)",
                        "stroke": 0,
                        "radius": 6,
                        "dasharray": null,
                        "text": "XGBoost",
                        "outlineStroke": 0,
                        "outlineColor": "rgba(0,0,0,0)",
                        "fontSize": 12,
                        "fontColor": "rgba(0,0,0,1)",
                        "fontFamily": null
                    }
                ]
            },
            {
                "type": "VerticalLayout",
                "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                "x": 20,
                "y": 20,
                "width": 78,
                "height": 56,
                "alpha": 1,
                "selectable": false,
                "draggable": false,
                "angle": 0,
                "userData": {
                    "layout": [
                        {
                            "name": "name",
                            "data": {
                                "type": "text",
                                "default": "",
                                "help": "Name of the Data Frame, use names without whitespace, instead of whitespace use underscore.\nWe recommended to keep the system provided default names for consitency. The name should just consist of lower and upper case letters and numbers without whitespace.\nThese are valid names: Input, InputLayer, inputLayer \nNote that Layer's name should be UNIQUE.",
                                "url": "",
                                "regex": "",
                                "label": "Name",
                                "dependsOn": "",
                                "dependState": []
                            }
                        }
                    ],
                    "data": {
                        "name": "DataFrame",
                        "class_name": "DataFrame",
                        "config": {
                            "batch_input_shape": [],
                            "dtype": "float32",
                            "sparse": false,
                            "name": "DataFrame"
                        },
                        "inbound_nodes": []
                    },
                    "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "type": "DataFrame"
                },
                "cssClass": "labelModel",
                "ports": [
                    {
                        "type": "draw2d.OutputPort",
                        "id": "e8e5afdb-7c1b-4df2-9581-54593398ff1c",
                        "width": 10,
                        "height": 10,
                        "alpha": 1,
                        "selectable": false,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "draw2d_OutputPort",
                        "bgColor": "rgba(79,104,112,1)",
                        "color": "rgba(27,27,27,1)",
                        "stroke": 1,
                        "dasharray": null,
                        "maxFanOut": 100,
                        "name": "output",
                        "semanticGroup": "global",
                        "port": "draw2d.OutputPort",
                        "locator": "draw2d.layout.locator.OutputPortLocator",
                        "locatorAttr": {}
                    }
                ],
                "bgColor": "rgba(3,102,214,1)",
                "color": "rgba(0,0,0,1)",
                "stroke": 1,
                "radius": 5,
                "dasharray": null,
                "gap": 0,
                "labels": [
                    {
                        "type": "TooltipFigure",
                        "id": "5a058d6e-0982-2510-226f-15b34ecac6c1",
                        "x": 0,
                        "y": 1,
                        "width": 78,
                        "height": 29,
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "labelModelHeader",
                        "ports": [],
                        "bgColor": "rgba(3,102,214,1)",
                        "color": "rgba(255,255,255,1)",
                        "stroke": 0,
                        "radius": 6,
                        "dasharray": null,
                        "text": "DataFrame",
                        "outlineStroke": 0,
                        "outlineColor": "rgba(0,0,0,0)",
                        "fontSize": 12,
                        "fontColor": "rgba(255,255,255,1)",
                        "fontFamily": null
                    },
                    {
                        "type": "TooltipFigure",
                        "id": "c6f63e7d-ca5d-37f2-d8a3-c07b04590d89",
                        "x": 0,
                        "y": 30,
                        "width": 78,
                        "height": 25,
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "TooltipFigure",
                        "ports": [],
                        "bgColor": "rgba(255,255,255,1)",
                        "color": "rgba(0,0,0,1)",
                        "stroke": 0,
                        "radius": 6,
                        "dasharray": null,
                        "text": "Input2",
                        "outlineStroke": 0,
                        "outlineColor": "rgba(0,0,0,0)",
                        "fontSize": 12,
                        "fontColor": "rgba(0,0,0,1)",
                        "fontFamily": null
                    }
                ]
            },
            {
                "type": "draw2d.Connection",
                "id": "e827b8d6-5079-3929-594f-4854394770fa",
                "alpha": 1,
                "selectable": true,
                "draggable": true,
                "angle": 0,
                "userData": {},
                "cssClass": "draw2d_Connection",
                "stroke": 2,
                "color": "rgba(18,156,228,1)",
                "outlineStroke": 0,
                "outlineColor": "rgba(0,0,0,0)",
                "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                "vertex": [
                    {
                        "x": 98,
                        "y": 48
                    },
                    {
                        "x": 158.296875,
                        "y": 48
                    },
                    {
                        "x": 158.296875,
                        "y": 72.625
                    },
                    {
                        "x": 218.59375,
                        "y": 72.625
                    }
                ],
                "router": "draw2d.layout.connection.ManhattanBridgedConnectionRouter",
                "radius": 3,
                "source": {
                    "node": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "port": "output"
                },
                "target": {
                    "node": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                    "port": "input0",
                    "decoration": "draw2d.decoration.connection.ArrowDecorator"
                }
            }
        ],
        "model_structure": {
            "booster": "gbtree",
            "n_estimators": 200,
            "learning_rate": 0.3,
            "gamma": 0.8,
            "max_depth": 6,
            "min_child_weight": 1,
            "max_delta_step": 0,
            "subsample": 0.9,
            "reg_lambda": 0,
            "reg_alpha": 0,
            "objective": "reg:squarederror",
            "base_score": 0.5,
            "eval_metric": "rmse",
            "seed": 0,
            "random_state": 0
        },
        "model_config": null,
        "model_type": "XGBoost",
        "Input_structure": [
            {
                "data_frame": {
                    "Label": "Input2",
                    "window_size": 1
                },
                "inputs": [
                    "XGBoost"
                ]
            }
        ],
        "newConvertor": {
            "draw2dStructure": [
                {
                    "type": "VerticalLayout",
                    "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                    "x": 218.59375,
                    "y": 44.625,
                    "width": 71,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "booster",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "gbtree",
                                            "value": "gbtree"
                                        },
                                        {
                                            "id": 1,
                                            "name": "dart",
                                            "value": "dart"
                                        },
                                        {
                                            "id": 2,
                                            "name": "gblinear",
                                            "value": "gblinear"
                                        }
                                    ],
                                    "default": "gbtree",
                                    "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Booster",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "n_estimators",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Number Of Estimator",
                                    "default": 100,
                                    "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Number of Estimators",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "learning_rate",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Learning Rate",
                                    "default": 0.3,
                                    "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Learning Rate",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "gamma",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "gamma",
                                    "default": 0,
                                    "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Gamma",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_depth",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Max Depth",
                                    "default": 6,
                                    "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Depth",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "min_child_weight",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Min Child Weight",
                                    "default": 1,
                                    "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                    "url": "",
                                    "regex": "",
                                    "label": "Min Child Weight",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_delta_step",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Max Delta Step",
                                    "default": 0,
                                    "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Delta Step",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "subsample",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Subsample",
                                    "default": 1,
                                    "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Subsample",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "reg_lambda",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Lambda",
                                    "default": 0,
                                    "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L2 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "reg_alpha",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Alpha",
                                    "default": 0,
                                    "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L1 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "base_score",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Base Score",
                                    "default": 0.5,
                                    "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Base Score",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "eval_metric",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "rmse",
                                            "value": "rmse"
                                        },
                                        {
                                            "id": 1,
                                            "name": "rmsle",
                                            "value": "rmsle"
                                        },
                                        {
                                            "id": 2,
                                            "name": "mae",
                                            "value": "mae"
                                        },
                                        {
                                            "id": 3,
                                            "name": "mape",
                                            "value": "mape"
                                        }
                                    ],
                                    "default": "rmse",
                                    "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Evaluation Metric",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "random_state",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Seed",
                                    "default": 0,
                                    "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Seed",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "name": "XGBoost",
                            "type": "Ensemble",
                            "config": {
                                "booster": "gbtree",
                                "n_estimators": 200,
                                "learning_rate": 0.3,
                                "gamma": 0.8,
                                "max_depth": 6,
                                "min_child_weight": 1,
                                "max_delta_step": 0,
                                "subsample": 0.9,
                                "reg_lambda": 0,
                                "reg_alpha": 0,
                                "objective": "reg:squarederror",
                                "base_score": 0.5,
                                "eval_metric": "rmse",
                                "seed": 0,
                                "random_state": 0
                            }
                        },
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "model": {
                            "name": "XGBoost",
                            "layout": [
                                {
                                    "name": "booster",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "gbtree",
                                                "value": "gbtree"
                                            },
                                            {
                                                "id": 1,
                                                "name": "dart",
                                                "value": "dart"
                                            },
                                            {
                                                "id": 2,
                                                "name": "gblinear",
                                                "value": "gblinear"
                                            }
                                        ],
                                        "default": "gbtree",
                                        "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Booster",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "n_estimators",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Number Of Estimator",
                                        "default": 100,
                                        "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Number of Estimators",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "learning_rate",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Learning Rate",
                                        "default": 0.3,
                                        "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Learning Rate",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "gamma",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "gamma",
                                        "default": 0,
                                        "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Gamma",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_depth",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Max Depth",
                                        "default": 6,
                                        "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Depth",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "min_child_weight",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Min Child Weight",
                                        "default": 1,
                                        "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                        "url": "",
                                        "regex": "",
                                        "label": "Min Child Weight",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_delta_step",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Max Delta Step",
                                        "default": 0,
                                        "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Delta Step",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "subsample",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Subsample",
                                        "default": 1,
                                        "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Subsample",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "reg_lambda",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Lambda",
                                        "default": 0,
                                        "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L2 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "reg_alpha",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Alpha",
                                        "default": 0,
                                        "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L1 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "base_score",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Base Score",
                                        "default": 0.5,
                                        "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Base Score",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "eval_metric",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "rmse",
                                                "value": "rmse"
                                            },
                                            {
                                                "id": 1,
                                                "name": "rmsle",
                                                "value": "rmsle"
                                            },
                                            {
                                                "id": 2,
                                                "name": "mae",
                                                "value": "mae"
                                            },
                                            {
                                                "id": 3,
                                                "name": "mape",
                                                "value": "mape"
                                            }
                                        ],
                                        "default": "rmse",
                                        "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Evaluation Metric",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "random_state",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Seed",
                                        "default": 0,
                                        "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Seed",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "nodeData": {
                                "name": "XGBoost",
                                "type": "Ensemble",
                                "config": {
                                    "booster": "gbtree",
                                    "n_estimators": 100,
                                    "learning_rate": 0.3,
                                    "gamma": 0,
                                    "max_depth": 6,
                                    "min_child_weight": 1,
                                    "max_delta_step": 0,
                                    "subsample": 1,
                                    "reg_lambda": 0,
                                    "reg_alpha": 0,
                                    "objective": "reg:squarederror",
                                    "base_score": 0.5,
                                    "eval_metric": "rmse",
                                    "seed": 0
                                }
                            },
                            "type": "Ensemble",
                            "multiple": false,
                            "inputFan": 100,
                            "outputFan": 10
                        },
                        "header": "Ensemble"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 100,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(0,0,0,1)",
                    "stroke": 1,
                    "radius": 5,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "3e6f82ae-f81e-3c11-14ae-6afa9db4331d",
                            "x": 0,
                            "y": 1,
                            "width": 71,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Ensemble",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "9b2bde84-caac-1664-0ecf-1292abd59ff6",
                            "x": 0,
                            "y": 30,
                            "width": 71,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "XGBoost",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "x": 20,
                    "y": 20,
                    "width": 78,
                    "height": 56,
                    "alpha": 1,
                    "selectable": false,
                    "draggable": false,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "name",
                                "data": {
                                    "type": "text",
                                    "default": "",
                                    "help": "Name of the Data Frame, use names without whitespace, instead of whitespace use underscore.\nWe recommended to keep the system provided default names for consitency. The name should just consist of lower and upper case letters and numbers without whitespace.\nThese are valid names: Input, InputLayer, inputLayer \nNote that Layer's name should be UNIQUE.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Name",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "name": "DataFrame",
                            "class_name": "DataFrame",
                            "config": {
                                "batch_input_shape": [],
                                "dtype": "float32",
                                "sparse": false,
                                "name": "DataFrame"
                            },
                            "inbound_nodes": []
                        },
                        "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "type": "DataFrame"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "e8e5afdb-7c1b-4df2-9581-54593398ff1c",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 100,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(0,0,0,1)",
                    "stroke": 1,
                    "radius": 5,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "5a058d6e-0982-2510-226f-15b34ecac6c1",
                            "x": 0,
                            "y": 1,
                            "width": 78,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DataFrame",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "c6f63e7d-ca5d-37f2-d8a3-c07b04590d89",
                            "x": 0,
                            "y": 30,
                            "width": 78,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Input2",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "draw2d.Connection",
                    "id": "e827b8d6-5079-3929-594f-4854394770fa",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 98,
                            "y": 48
                        },
                        {
                            "x": 158.296875,
                            "y": 48
                        },
                        {
                            "x": 158.296875,
                            "y": 72.625
                        },
                        {
                            "x": 218.59375,
                            "y": 72.625
                        }
                    ],
                    "router": "draw2d.layout.connection.ManhattanBridgedConnectionRouter",
                    "radius": 3,
                    "source": {
                        "node": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "port": "output"
                    },
                    "target": {
                        "node": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                }
            ],
            "blocks": [
                {
                    "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                    "data": {
                        "name": "XGBoost",
                        "type": "Ensemble",
                        "config": {
                            "booster": "gbtree",
                            "n_estimators": 200,
                            "learning_rate": 0.3,
                            "gamma": 0.8,
                            "max_depth": 6,
                            "min_child_weight": 1,
                            "max_delta_step": 0,
                            "subsample": 0.9,
                            "reg_lambda": 0,
                            "reg_alpha": 0,
                            "objective": "reg:squarederror",
                            "base_score": 0.5,
                            "eval_metric": "rmse",
                            "seed": 0,
                            "random_state": 0
                        }
                    }
                },
                {
                    "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "data": {
                        "name": "DataFrame",
                        "class_name": "DataFrame",
                        "config": {
                            "batch_input_shape": [],
                            "dtype": "float32",
                            "sparse": false,
                            "name": "DataFrame"
                        },
                        "inbound_nodes": []
                    }
                }
            ],
            "connections": [
                {
                    "source": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "target": "f89a1b5c-46a7-4999-b787-a263a9ef4aac"
                }
            ],
            "dataFrames": [
                {
                    "data_frame": {
                        "Label": "Input2",
                        "window_size": 1
                    },
                    "inputs": [
                        "XGBoost"
                    ]
                }
            ]
        }
    },
    "ui": {
        "name": "PJM NonDeep RTO Price Hourly",
        "TradingCalendar": "1",
        "TimeZone": "152",
        "OperationalMode": "Real Time",
        "OutputWindowSize": 1,
        "company": null,
        "Market": "16",
        "OperationalSchedule": "Continuous",
        "description": null,
        "ContinuousTraining": false,
        "UsePreTrainedModel": null,
        "useLevels": null,
        "featureImportance": false,
        "DataType": "TimeSeries",
        "DataSource": "Static",
        "JobAction": 32,
        "JobType": "Regression",
        "DateTypeMTS": "relative",
        "MainTimeSeries": [
            {
                "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,LMP",
                "CurvePhase": "20",
                "CurveGrain": "2",
                "StartOffset": -4,
                "StartRegion": "5",
                "EndOffset": -4,
                "EndRegion": "4",
                "StartDate": null,
                "StartTime": null,
                "EndDate": null,
                "EndTime": null
            },
            {
                "CurveName": "MarketData:Node,7105643,Product,2,SubType,10,JsonKey,LMP",
                "CurvePhase": "23",
                "CurveGrain": "2",
                "StartOffset": -20,
                "StartRegion": "4",
                "EndOffset": -4,
                "EndRegion": "4",
                "StartDate": null,
                "StartTime": null,
                "EndDate": null,
                "EndTime": null
            }
        ],
        "DateType": "relative",
        "StartDate": null,
        "StartTime": "00:00",
        "EndDate": null,
        "EndTime": "00:00",
        "StartOffset": "-3",
        "StartRegion": "4",
        "EndOffset": "-1",
        "EndRegion": "2",
        "CurveDetails": {
            "CurveDetails": [
                {
                    "Label": "DAM_Congetion",
                    "Property": {
                        "PredictorType": "External",
                        "CurveLabel": "DAM_Congetion",
                        "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Congestion",
                        "CurvePhase": "35",
                        "CurveGrain": "2",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": 0,
                        "ShiftRegion": "2",
                        "ShiftWeeklyPattern": false,
                        "ForwardCurve": [],
                        "FillForwardStrategy": "None",
                        "FillForwardOffset": 24,
                        "FillForwardRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "load",
                    "Property": {
                        "PredictorType": "External",
                        "CurveLabel": "load",
                        "CurveName": "MarketData:Node,7105643,Product,2,Type,2,SubType,3",
                        "CurvePhase": "0",
                        "CurveGrain": "2",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": 0,
                        "ShiftRegion": "2",
                        "ShiftWeeklyPattern": false,
                        "ForwardCurve": [],
                        "FillForwardStrategy": "None",
                        "FillForwardOffset": 24,
                        "FillForwardRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "DAM_loss",
                    "Property": {
                        "PredictorType": "External",
                        "CurveLabel": "DAM_loss",
                        "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Loss",
                        "CurvePhase": "35",
                        "CurveGrain": "2",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": 0,
                        "ShiftRegion": "2",
                        "ShiftWeeklyPattern": false,
                        "ForwardCurve": [],
                        "FillForwardStrategy": "PDSH",
                        "FillForwardOffset": 24,
                        "FillForwardRegion": "2",
                        "EnableVisualization": false
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "p1",
                    "Property": {
                        "PredictorType": "MainTimeSeries",
                        "CurveLabel": "p1",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": -1,
                        "ShiftWeeklyPattern": false,
                        "ShiftRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "p2",
                    "Property": {
                        "PredictorType": "MainTimeSeries",
                        "CurveLabel": "p2",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": -2,
                        "ShiftWeeklyPattern": false,
                        "ShiftRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": []
                },
                {
                    "Label": "p24",
                    "Property": {
                        "PredictorType": "MainTimeSeries",
                        "CurveLabel": "p24",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": -24,
                        "ShiftWeeklyPattern": false,
                        "ShiftRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": []
                },
                {
                    "Label": "DAM_System",
                    "Property": {
                        "PredictorType": "External",
                        "CurveLabel": "DAM_System",
                        "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,SystemEnergy",
                        "CurvePhase": "35",
                        "CurveGrain": "2",
                        "ShiftStrategy": "Simple",
                        "ShiftOffset": 0,
                        "ShiftRegion": "2",
                        "ShiftWeeklyPattern": false,
                        "ForwardCurve": [],
                        "FillForwardStrategy": "None",
                        "FillForwardOffset": 24,
                        "FillForwardRegion": "2",
                        "EnableVisualization": true
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "hour",
                    "Property": {
                        "PredictorType": "Builtin",
                        "CurveLabel": "hour",
                        "IndicatorName": "1",
                        "EnableVisualization": false
                    },
                    "Processors": [
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "weekday",
                    "Property": {
                        "PredictorType": "Builtin",
                        "CurveLabel": "weekday",
                        "IndicatorName": "2",
                        "EnableVisualization": false
                    },
                    "Processors": [
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": [
                        {
                            "Label": "Input2",
                            "window_size": 1
                        }
                    ]
                },
                {
                    "Label": "Target",
                    "Property": {
                        "PredictorType": "MainTimeSeries",
                        "CurveLabel": "Target",
                        "OutputCurveName": "MarketData:Node,7105643,Product,2,SubType,3",
                        "OutputCurvePhase": "22",
                        "TargetType": "Value",
                        "BinaryThreshold": null,
                        "FillForwardStrategy": "UseForecastedValue",
                        "EnableVisualization": false,
                        "ForwardCurve": []
                    },
                    "Processors": [
                        {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        {
                            "Action": "ExportForFormula"
                        },
                        {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        }
                    ],
                    "Input": []
                }
            ],
            "draw2dStructure": [
                {
                    "type": "VerticalLayout",
                    "id": "290641a0-46b3-477a-ada8-f5ce21830020",
                    "x": 374.40625,
                    "y": 810.671875,
                    "width": 51,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "MainTimeSeries",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": "Target",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": "",
                                    "disabled": true
                                }
                            },
                            {
                                "name": "OutputCurveName",
                                "data": {
                                    "type": "curveName-v2",
                                    "default": null,
                                    "values": [],
                                    "label": "Output Curve Name",
                                    "url": {
                                        "userReadable": "/api/v2/curve-name-reader/get",
                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                    },
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "OutputCurvePhase",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                    },
                                    "label": "Output Curve Phase",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "TargetType",
                                "data": {
                                    "type": "enum",
                                    "default": "Value",
                                    "label": "Target Type",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Value",
                                            "value": "Value"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Binary",
                                            "value": "Binary"
                                        }
                                    ],
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "BinaryThreshold",
                                "data": {
                                    "type": "float",
                                    "default": null,
                                    "label": "Binary Threshold",
                                    "dependsOn": "TargetType",
                                    "dependState": [
                                        "Binary"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "UseForecastedValue",
                                    "label": "Fill Forward Strategy",
                                    "values": [
                                        {
                                            "id": 0,
                                            "value": "UseForecastedValue",
                                            "name": "UseForecastedValue"
                                        },
                                        {
                                            "id": 1,
                                            "value": "UseForwardCurve",
                                            "name": "UseForwardCurve"
                                        }
                                    ],
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ForwardCurve",
                                "data": {
                                    "type": "list",
                                    "values": [
                                        {
                                            "column": "CurveName",
                                            "data": {
                                                "type": "curveName-v2",
                                                "values": [],
                                                "default": null,
                                                "width": 50,
                                                "label": "Curve Name",
                                                "url": {
                                                    "userReadable": "/api/v2/curve-name-reader/get",
                                                    "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                },
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurvePhase",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "values": [],
                                                "default": null,
                                                "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                },
                                                "label": "Curve Phase",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurveGrain",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "default": null,
                                                "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-grain"
                                                },
                                                "label": "Curve Grain",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "IncludeInStartingPoint",
                                            "data": {
                                                "type": "bool",
                                                "width": 60,
                                                "default": null,
                                                "placeHolder": "",
                                                "label": " Include In Starting Point",
                                                "dependsOn": "",
                                                "dependState": []
                                            }
                                        }
                                    ],
                                    "label": "Forward Curve",
                                    "default": [],
                                    "dependsOn": "FillForwardStrategy",
                                    "dependState": [
                                        "UseForwardCurve"
                                    ]
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "MainTimeSeries",
                            "CurveLabel": "Target",
                            "OutputCurveName": "MarketData:Node,7105643,Product,2,SubType,3",
                            "OutputCurvePhase": "22",
                            "TargetType": "Value",
                            "BinaryThreshold": null,
                            "FillForwardStrategy": "UseForecastedValue",
                            "EnableVisualization": false,
                            "ForwardCurve": []
                        },
                        "id": "290641a0-46b3-477a-ada8-f5ce21830020",
                        "model": {
                            "name": "MTS-Based Target",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "MainTimeSeries",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": "Target",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": "",
                                        "disabled": true
                                    }
                                },
                                {
                                    "name": "OutputCurveName",
                                    "data": {
                                        "type": "curveName-v2",
                                        "default": null,
                                        "values": [],
                                        "label": "Output Curve Name",
                                        "url": {
                                            "userReadable": "/api/v2/curve-name-reader/get",
                                            "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                        },
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "OutputCurvePhase",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                        },
                                        "label": "Output Curve Phase",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "TargetType",
                                    "data": {
                                        "type": "enum",
                                        "default": "Value",
                                        "label": "Target Type",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Value",
                                                "value": "Value"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Binary",
                                                "value": "Binary"
                                            }
                                        ],
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "BinaryThreshold",
                                    "data": {
                                        "type": "float",
                                        "default": null,
                                        "label": "Binary Threshold",
                                        "dependsOn": "TargetType",
                                        "dependState": [
                                            "Binary"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "UseForecastedValue",
                                        "label": "Fill Forward Strategy",
                                        "values": [
                                            {
                                                "id": 0,
                                                "value": "UseForecastedValue",
                                                "name": "UseForecastedValue"
                                            },
                                            {
                                                "id": 1,
                                                "value": "UseForwardCurve",
                                                "name": "UseForwardCurve"
                                            }
                                        ],
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ForwardCurve",
                                    "data": {
                                        "type": "list",
                                        "values": [
                                            {
                                                "column": "CurveName",
                                                "data": {
                                                    "type": "curveName-v2",
                                                    "values": [],
                                                    "default": null,
                                                    "width": 50,
                                                    "label": "Curve Name",
                                                    "url": {
                                                        "userReadable": "/api/v2/curve-name-reader/get",
                                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                    },
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurvePhase",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "values": [],
                                                    "default": null,
                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                    },
                                                    "label": "Curve Phase",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurveGrain",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "default": null,
                                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-grain"
                                                    },
                                                    "label": "Curve Grain",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "IncludeInStartingPoint",
                                                "data": {
                                                    "type": "bool",
                                                    "width": 60,
                                                    "default": null,
                                                    "placeHolder": "",
                                                    "label": " Include In Starting Point",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            }
                                        ],
                                        "label": "Forward Curve",
                                        "default": [],
                                        "dependsOn": "FillForwardStrategy",
                                        "dependState": [
                                            "UseForwardCurve"
                                        ]
                                    }
                                }
                            ],
                            "type": "Target",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Target"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "290641a0-46b3-477a-ada8-f5ce21830020Target",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "f7911f07-2f2d-3d60-66f5-a585520cafbc",
                            "x": 0,
                            "y": 1,
                            "width": 51,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Target",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "379bf340-c538-2cbd-1d8f-5b747d5a15a2",
                            "x": 0,
                            "y": 30,
                            "width": 51,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Target",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "c84811a1-aee9-4969-95ba-95a57e792cea",
                    "x": 373.40625,
                    "y": 360.671875,
                    "width": 56,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "MainTimeSeries",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "default": "simple",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "MainTimeSeries",
                            "CurveLabel": "p1",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": -1,
                            "ShiftWeeklyPattern": false,
                            "ShiftRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "c84811a1-aee9-4969-95ba-95a57e792cea",
                        "model": {
                            "name": "Internal Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "MainTimeSeries",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "default": "simple",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "c84811a1-aee9-4969-95ba-95a57e792ceaCurves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "461da2a3-73da-5fc2-a861-5f4533313702",
                            "x": 0,
                            "y": 1,
                            "width": 56,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "ba464430-6b60-e7b0-689e-1de9b79ed209",
                            "x": 0,
                            "y": 30,
                            "width": 56,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "p1",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "21a1ff6a-d37a-480c-8098-1dc25725cd33",
                    "x": 372.40625,
                    "y": 432.671875,
                    "width": 56,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "MainTimeSeries",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "default": "simple",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "MainTimeSeries",
                            "CurveLabel": "p2",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": -2,
                            "ShiftWeeklyPattern": false,
                            "ShiftRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "21a1ff6a-d37a-480c-8098-1dc25725cd33",
                        "model": {
                            "name": "Internal Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "MainTimeSeries",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "default": "simple",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "21a1ff6a-d37a-480c-8098-1dc25725cd33Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "7ff98d87-2972-6767-6560-a4283c3325c3",
                            "x": 0,
                            "y": 1,
                            "width": 56,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "a52021d3-ab35-2e79-0b5c-099a2a06f8f1",
                            "x": 0,
                            "y": 30,
                            "width": 56,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "p2",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "c67bd03a-a960-437d-977d-d32a377e8c83",
                    "x": 372.40625,
                    "y": 507.671875,
                    "width": 56,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "MainTimeSeries",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "default": "simple",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "MainTimeSeries",
                            "CurveLabel": "p24",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": -24,
                            "ShiftWeeklyPattern": false,
                            "ShiftRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "c67bd03a-a960-437d-977d-d32a377e8c83",
                        "model": {
                            "name": "Internal Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "MainTimeSeries",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "default": "simple",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "c67bd03a-a960-437d-977d-d32a377e8c83Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "e2f02f86-a3fc-401d-2f85-7f72bb1ec134",
                            "x": 0,
                            "y": 1,
                            "width": 56,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "af911e7a-55b4-a455-0892-fbd7c22f5a0f",
                            "x": 0,
                            "y": 30,
                            "width": 56,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "p24",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "39cdac16-6c77-4cd9-9293-2c6ce0f24272",
                    "x": 373.40625,
                    "y": 210.671875,
                    "width": 56,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "External",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveName",
                                "data": {
                                    "type": "curveName-v2",
                                    "values": [],
                                    "default": null,
                                    "label": "Curve Name",
                                    "url": {
                                        "userReadable": "/api/v2/curve-name-reader/get",
                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                    },
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurvePhase",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                    },
                                    "label": "Curve Phase",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurveGrain",
                                "data": {
                                    "type": "enum",
                                    "default": null,
                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Curve Grain",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "Simple",
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ForwardCurve",
                                "data": {
                                    "type": "list",
                                    "values": [
                                        {
                                            "column": "CurveName",
                                            "data": {
                                                "type": "curveName-v2",
                                                "values": [],
                                                "default": null,
                                                "width": 50,
                                                "label": "Curve Name",
                                                "url": {
                                                    "userReadable": "/api/v2/curve-name-reader/get",
                                                    "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                },
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurvePhase",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "values": [],
                                                "default": null,
                                                "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                },
                                                "label": "Curve Phase",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurveGrain",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "default": null,
                                                "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-grain"
                                                },
                                                "label": "Curve Grain",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        }
                                    ],
                                    "label": "Forward Curve",
                                    "static": true,
                                    "default": [],
                                    "rows": 1,
                                    "dependsOn": "FillForwardStrategy",
                                    "dependState": [
                                        "UseForwardCurve"
                                    ]
                                }
                            },
                            {
                                "name": "FillForwardStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "None",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "None",
                                            "value": "None"
                                        },
                                        {
                                            "id": 1,
                                            "name": "PDSH",
                                            "value": "PDSH"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Duplicate Last",
                                            "value": "DuplicateLast"
                                        },
                                        {
                                            "id": 4,
                                            "name": "Use Forward Curve",
                                            "value": "UseForwardCurve"
                                        }
                                    ],
                                    "label": "Fill Forward Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardOffset",
                                "data": {
                                    "type": "number",
                                    "default": 24,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Fill Forward Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Fill Forward Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "External",
                            "CurveLabel": "load",
                            "CurveName": "MarketData:Node,7105643,Product,2,Type,2,SubType,3",
                            "CurvePhase": "0",
                            "CurveGrain": "2",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": 0,
                            "ShiftRegion": "2",
                            "ShiftWeeklyPattern": false,
                            "ForwardCurve": [],
                            "FillForwardStrategy": "None",
                            "FillForwardOffset": 24,
                            "FillForwardRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "39cdac16-6c77-4cd9-9293-2c6ce0f24272",
                        "model": {
                            "name": "External Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "External",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveName",
                                    "data": {
                                        "type": "curveName-v2",
                                        "values": [],
                                        "default": null,
                                        "label": "Curve Name",
                                        "url": {
                                            "userReadable": "/api/v2/curve-name-reader/get",
                                            "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                        },
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurvePhase",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                        },
                                        "label": "Curve Phase",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurveGrain",
                                    "data": {
                                        "type": "enum",
                                        "default": null,
                                        "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Curve Grain",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "Simple",
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ForwardCurve",
                                    "data": {
                                        "type": "list",
                                        "values": [
                                            {
                                                "column": "CurveName",
                                                "data": {
                                                    "type": "curveName-v2",
                                                    "values": [],
                                                    "default": null,
                                                    "width": 50,
                                                    "label": "Curve Name",
                                                    "url": {
                                                        "userReadable": "/api/v2/curve-name-reader/get",
                                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                    },
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurvePhase",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "values": [],
                                                    "default": null,
                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                    },
                                                    "label": "Curve Phase",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurveGrain",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "default": null,
                                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-grain"
                                                    },
                                                    "label": "Curve Grain",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            }
                                        ],
                                        "label": "Forward Curve",
                                        "static": true,
                                        "default": [],
                                        "rows": 1,
                                        "dependsOn": "FillForwardStrategy",
                                        "dependState": [
                                            "UseForwardCurve"
                                        ]
                                    }
                                },
                                {
                                    "name": "FillForwardStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "None",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "None",
                                                "value": "None"
                                            },
                                            {
                                                "id": 1,
                                                "name": "PDSH",
                                                "value": "PDSH"
                                            },
                                            {
                                                "id": 3,
                                                "name": "Duplicate Last",
                                                "value": "DuplicateLast"
                                            },
                                            {
                                                "id": 4,
                                                "name": "Use Forward Curve",
                                                "value": "UseForwardCurve"
                                            }
                                        ],
                                        "label": "Fill Forward Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardOffset",
                                    "data": {
                                        "type": "number",
                                        "default": 24,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Fill Forward Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Fill Forward Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "39cdac16-6c77-4cd9-9293-2c6ce0f24272Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "42a939c6-3a8f-7c8d-830e-a6938015a6d1",
                            "x": 0,
                            "y": 1,
                            "width": 56,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "58d334ae-7b5a-469f-6ab8-38f9e8249a25",
                            "x": 0,
                            "y": 30,
                            "width": 56,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "load",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "4706b3c9-521d-45be-9e31-9f6bf22769d1",
                    "x": 371.40625,
                    "y": 581.671875,
                    "width": 87,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "External",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveName",
                                "data": {
                                    "type": "curveName-v2",
                                    "values": [],
                                    "default": null,
                                    "label": "Curve Name",
                                    "url": {
                                        "userReadable": "/api/v2/curve-name-reader/get",
                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                    },
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurvePhase",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                    },
                                    "label": "Curve Phase",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurveGrain",
                                "data": {
                                    "type": "enum",
                                    "default": null,
                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Curve Grain",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "Simple",
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ForwardCurve",
                                "data": {
                                    "type": "list",
                                    "values": [
                                        {
                                            "column": "CurveName",
                                            "data": {
                                                "type": "curveName-v2",
                                                "values": [],
                                                "default": null,
                                                "width": 50,
                                                "label": "Curve Name",
                                                "url": {
                                                    "userReadable": "/api/v2/curve-name-reader/get",
                                                    "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                },
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurvePhase",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "values": [],
                                                "default": null,
                                                "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                },
                                                "label": "Curve Phase",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurveGrain",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "default": null,
                                                "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-grain"
                                                },
                                                "label": "Curve Grain",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        }
                                    ],
                                    "label": "Forward Curve",
                                    "static": true,
                                    "default": [],
                                    "rows": 1,
                                    "dependsOn": "FillForwardStrategy",
                                    "dependState": [
                                        "UseForwardCurve"
                                    ]
                                }
                            },
                            {
                                "name": "FillForwardStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "None",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "None",
                                            "value": "None"
                                        },
                                        {
                                            "id": 1,
                                            "name": "PDSH",
                                            "value": "PDSH"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Duplicate Last",
                                            "value": "DuplicateLast"
                                        },
                                        {
                                            "id": 4,
                                            "name": "Use Forward Curve",
                                            "value": "UseForwardCurve"
                                        }
                                    ],
                                    "label": "Fill Forward Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardOffset",
                                "data": {
                                    "type": "number",
                                    "default": 24,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Fill Forward Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Fill Forward Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "External",
                            "CurveLabel": "DAM_System",
                            "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,SystemEnergy",
                            "CurvePhase": "35",
                            "CurveGrain": "2",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": 0,
                            "ShiftRegion": "2",
                            "ShiftWeeklyPattern": false,
                            "ForwardCurve": [],
                            "FillForwardStrategy": "None",
                            "FillForwardOffset": 24,
                            "FillForwardRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "4706b3c9-521d-45be-9e31-9f6bf22769d1",
                        "model": {
                            "name": "External Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "External",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveName",
                                    "data": {
                                        "type": "curveName-v2",
                                        "values": [],
                                        "default": null,
                                        "label": "Curve Name",
                                        "url": {
                                            "userReadable": "/api/v2/curve-name-reader/get",
                                            "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                        },
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurvePhase",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                        },
                                        "label": "Curve Phase",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurveGrain",
                                    "data": {
                                        "type": "enum",
                                        "default": null,
                                        "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Curve Grain",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "Simple",
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ForwardCurve",
                                    "data": {
                                        "type": "list",
                                        "values": [
                                            {
                                                "column": "CurveName",
                                                "data": {
                                                    "type": "curveName-v2",
                                                    "values": [],
                                                    "default": null,
                                                    "width": 50,
                                                    "label": "Curve Name",
                                                    "url": {
                                                        "userReadable": "/api/v2/curve-name-reader/get",
                                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                    },
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurvePhase",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "values": [],
                                                    "default": null,
                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                    },
                                                    "label": "Curve Phase",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurveGrain",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "default": null,
                                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-grain"
                                                    },
                                                    "label": "Curve Grain",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            }
                                        ],
                                        "label": "Forward Curve",
                                        "static": true,
                                        "default": [],
                                        "rows": 1,
                                        "dependsOn": "FillForwardStrategy",
                                        "dependState": [
                                            "UseForwardCurve"
                                        ]
                                    }
                                },
                                {
                                    "name": "FillForwardStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "None",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "None",
                                                "value": "None"
                                            },
                                            {
                                                "id": 1,
                                                "name": "PDSH",
                                                "value": "PDSH"
                                            },
                                            {
                                                "id": 3,
                                                "name": "Duplicate Last",
                                                "value": "DuplicateLast"
                                            },
                                            {
                                                "id": 4,
                                                "name": "Use Forward Curve",
                                                "value": "UseForwardCurve"
                                            }
                                        ],
                                        "label": "Fill Forward Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardOffset",
                                    "data": {
                                        "type": "number",
                                        "default": 24,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Fill Forward Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Fill Forward Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "4706b3c9-521d-45be-9e31-9f6bf22769d1Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "3b803948-1f84-e137-66cc-e7cef9263fc6",
                            "x": 0,
                            "y": 1,
                            "width": 87,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "9a16ca31-2ff7-8c12-d317-df1b35721a08",
                            "x": 0,
                            "y": 30,
                            "width": 87,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DAM_System",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "16360eb5-8835-42d9-bd2c-889d7ed33d97",
                    "x": 478.40625,
                    "y": 582.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "16360eb5-8835-42d9-bd2c-889d7ed33d97",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "16360eb5-8835-42d9-bd2c-889d7ed33d97GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "16360eb5-8835-42d9-bd2c-889d7ed33d97GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "9c8b6451-4313-ef63-400f-63958cfadbec",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "76151a89-4851-08f1-44d0-0523f03da3d3",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "515e8242-3a11-45f5-9a4d-8dbd4a84bfcc",
                    "x": 479.40625,
                    "y": 360.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "515e8242-3a11-45f5-9a4d-8dbd4a84bfcc",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "515e8242-3a11-45f5-9a4d-8dbd4a84bfccGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "515e8242-3a11-45f5-9a4d-8dbd4a84bfccGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "d47b428a-4a6f-2775-d589-47be5bcc972c",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "9f5d8e36-1e3a-26f7-aed7-291533cfbc7a",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "d937774c-4cbd-4791-92c7-65c4c23ff2ec",
                    "x": 478.40625,
                    "y": 432.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "d937774c-4cbd-4791-92c7-65c4c23ff2ec",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "d937774c-4cbd-4791-92c7-65c4c23ff2ecGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "d937774c-4cbd-4791-92c7-65c4c23ff2ecGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "5b5d87b3-276b-9908-c3b8-85a8e2e09038",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "7081c0a1-47bb-d097-9306-c7585a71426f",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4",
                    "x": 478.40625,
                    "y": 507.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "e19d3265-dd59-26e8-ccc4-e8e45f377611",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "bbef85d9-a1da-55b5-31b0-da7b556ba728",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "796f2b6d-6206-4e81-91a0-719452915c49",
                    "x": 372.40625,
                    "y": 657.671875,
                    "width": 56,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "Builtin",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "IndicatorName",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "url": {
                                        "url": "https://etrm-ai.quantsys.com/api/v2/job-ui/selector-field-item?editorField=BuiltinIndicator"
                                    },
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "label": "Indicator Name",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "Builtin",
                            "CurveLabel": "hour",
                            "IndicatorName": "1",
                            "EnableVisualization": false
                        },
                        "id": "796f2b6d-6206-4e81-91a0-719452915c49",
                        "model": {
                            "name": "Builtin Indicator",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "Builtin",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "IndicatorName",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "url": {
                                            "url": "https://etrm-ai.quantsys.com/api/v2/job-ui/selector-field-item?editorField=BuiltinIndicator"
                                        },
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "label": "Indicator Name",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "796f2b6d-6206-4e81-91a0-719452915c49Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "9514fc86-5aaf-16b7-3088-0e96229e8bc9",
                            "x": 0,
                            "y": 1,
                            "width": 56,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "29016177-03ed-d15c-df42-bd83b6231d71",
                            "x": 0,
                            "y": 30,
                            "width": 56,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "hour",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "2b181fb9-a851-4cca-8343-9da9e1b7a0da",
                    "x": 372.40625,
                    "y": 732.671875,
                    "width": 62,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "Builtin",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "IndicatorName",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "url": {
                                        "url": "https://etrm-ai.quantsys.com/api/v2/job-ui/selector-field-item?editorField=BuiltinIndicator"
                                    },
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "label": "Indicator Name",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "Builtin",
                            "CurveLabel": "weekday",
                            "IndicatorName": "2",
                            "EnableVisualization": false
                        },
                        "id": "2b181fb9-a851-4cca-8343-9da9e1b7a0da",
                        "model": {
                            "name": "Builtin Indicator",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "Builtin",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "IndicatorName",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "url": {
                                            "url": "https://etrm-ai.quantsys.com/api/v2/job-ui/selector-field-item?editorField=BuiltinIndicator"
                                        },
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "label": "Indicator Name",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "2b181fb9-a851-4cca-8343-9da9e1b7a0daCurves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "fd10c947-91db-61c6-71c3-8d3c25d15498",
                            "x": 0,
                            "y": 1,
                            "width": 62,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "51f9c821-ec5d-2c81-8ced-9aae279c9ff1",
                            "x": 0,
                            "y": 30,
                            "width": 62,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "weekday",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4",
                    "x": 646.40625,
                    "y": 360.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "ee299d97-cb54-e95a-369c-276778cdd9fb",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "2df62d99-6cd5-27be-c52a-6ed3483058ea",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "24f79e34-45d0-4d82-ba2e-1b007c77265a",
                    "x": 645.40625,
                    "y": 432.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "24f79e34-45d0-4d82-ba2e-1b007c77265a",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "24f79e34-45d0-4d82-ba2e-1b007c77265aScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "24f79e34-45d0-4d82-ba2e-1b007c77265aScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "da574131-dbab-385b-f0a0-ef23849812c6",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "9782c3ce-0c1d-c060-c20a-16e5477fd54a",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "36025adf-3a32-4e64-a303-f4017c0f5b81",
                    "x": 645.40625,
                    "y": 507.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "36025adf-3a32-4e64-a303-f4017c0f5b81",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "36025adf-3a32-4e64-a303-f4017c0f5b81Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "36025adf-3a32-4e64-a303-f4017c0f5b81Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "d42b4fa4-2f5c-1eb9-1009-965743ef6b1a",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "c8a33945-eccb-bfee-9e27-0c8631274fe9",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "6feff562-875e-43fd-9547-61cd333d1c74",
                    "x": 645.40625,
                    "y": 582.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "6feff562-875e-43fd-9547-61cd333d1c74",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "6feff562-875e-43fd-9547-61cd333d1c74Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "6feff562-875e-43fd-9547-61cd333d1c74Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "c950f594-201a-c81a-581b-14a67d474b1b",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "cc43963c-7f0e-d845-84bb-75bd757cee04",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "efbbf854-61c0-480a-9b7d-e1f1b2e4fd41",
                    "x": 802.40625,
                    "y": 810.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "efbbf854-61c0-480a-9b7d-e1f1b2e4fd41",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "efbbf854-61c0-480a-9b7d-e1f1b2e4fd41Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "efbbf854-61c0-480a-9b7d-e1f1b2e4fd41Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "6cb70e6f-4dcd-7c15-5ae2-4e24a6695ac2",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "90a59cfc-1d03-12d3-7e4a-229baa16b2d7",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                    "x": 1008.3937377929688,
                    "y": 554.8718872070312,
                    "width": 78,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Label",
                                "data": {
                                    "type": "text",
                                    "default": "Input",
                                    "label": "Label",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "window_size",
                                "data": {
                                    "type": "int",
                                    "values": [],
                                    "help": "A positive integer showing the number of consecutive input  rows that will be fed to the model to generate one output. (backward window). The values depende on the model. \nIf dense model is used either set the value to 1 or if you set it to a number greater than 1 you should have a 'flatten' layer as the first layer after input layer. \nFor LSTM and CNN it should be greater than 1. Usually in these cases 10 is recommended.",
                                    "default": 1,
                                    "label": "Window Size",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Label": "Input2",
                            "window_size": 1
                        },
                        "id": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "model": {
                            "name": "Data Frame",
                            "layout": [
                                {
                                    "name": "Label",
                                    "data": {
                                        "type": "text",
                                        "default": "Input",
                                        "label": "Label",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "window_size",
                                    "data": {
                                        "type": "int",
                                        "values": [],
                                        "help": "A positive integer showing the number of consecutive input  rows that will be fed to the model to generate one output. (backward window). The values depende on the model. \nIf dense model is used either set the value to 1 or if you set it to a number greater than 1 you should have a 'flatten' layer as the first layer after input layer. \nFor LSTM and CNN it should be greater than 1. Usually in these cases 10 is recommended.",
                                        "default": 1,
                                        "label": "Window Size",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "DataFrame",
                            "inputFan": 100
                        },
                        "type": "DataFrame"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69DataFrame",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 100,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "d2f8201d-d174-ffaa-e580-7a2ea04b4d7d",
                            "x": 0,
                            "y": 1,
                            "width": 78,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DataFrame",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "a59792fa-58d5-ff26-a49e-726ec3bfaa8e",
                            "x": 0,
                            "y": 30,
                            "width": 78,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Input2",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "f64f8b90-3649-4dd5-97fa-98809fb12303",
                    "x": 375.359375,
                    "y": 280.671875,
                    "width": 68,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "External",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveName",
                                "data": {
                                    "type": "curveName-v2",
                                    "values": [],
                                    "default": null,
                                    "label": "Curve Name",
                                    "url": {
                                        "userReadable": "/api/v2/curve-name-reader/get",
                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                    },
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurvePhase",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                    },
                                    "label": "Curve Phase",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurveGrain",
                                "data": {
                                    "type": "enum",
                                    "default": null,
                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Curve Grain",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "Simple",
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ForwardCurve",
                                "data": {
                                    "type": "list",
                                    "values": [
                                        {
                                            "column": "CurveName",
                                            "data": {
                                                "type": "curveName-v2",
                                                "values": [],
                                                "default": null,
                                                "width": 50,
                                                "label": "Curve Name",
                                                "url": {
                                                    "userReadable": "/api/v2/curve-name-reader/get",
                                                    "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                },
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurvePhase",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "values": [],
                                                "default": null,
                                                "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                },
                                                "label": "Curve Phase",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurveGrain",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "default": null,
                                                "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-grain"
                                                },
                                                "label": "Curve Grain",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        }
                                    ],
                                    "label": "Forward Curve",
                                    "static": true,
                                    "default": [],
                                    "rows": 1,
                                    "dependsOn": "FillForwardStrategy",
                                    "dependState": [
                                        "UseForwardCurve"
                                    ]
                                }
                            },
                            {
                                "name": "FillForwardStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "None",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "None",
                                            "value": "None"
                                        },
                                        {
                                            "id": 1,
                                            "name": "PDSH",
                                            "value": "PDSH"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Duplicate Last",
                                            "value": "DuplicateLast"
                                        },
                                        {
                                            "id": 4,
                                            "name": "Use Forward Curve",
                                            "value": "UseForwardCurve"
                                        }
                                    ],
                                    "label": "Fill Forward Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardOffset",
                                "data": {
                                    "type": "number",
                                    "default": 24,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Fill Forward Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Fill Forward Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "External",
                            "CurveLabel": "DAM_loss",
                            "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Loss",
                            "CurvePhase": "35",
                            "CurveGrain": "2",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": 0,
                            "ShiftRegion": "2",
                            "ShiftWeeklyPattern": false,
                            "ForwardCurve": [],
                            "FillForwardStrategy": "PDSH",
                            "FillForwardOffset": 24,
                            "FillForwardRegion": "2",
                            "EnableVisualization": false
                        },
                        "id": "f64f8b90-3649-4dd5-97fa-98809fb12303",
                        "model": {
                            "name": "External Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "External",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveName",
                                    "data": {
                                        "type": "curveName-v2",
                                        "values": [],
                                        "default": null,
                                        "label": "Curve Name",
                                        "url": {
                                            "userReadable": "/api/v2/curve-name-reader/get",
                                            "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                        },
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurvePhase",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                        },
                                        "label": "Curve Phase",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurveGrain",
                                    "data": {
                                        "type": "enum",
                                        "default": null,
                                        "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Curve Grain",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "Simple",
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ForwardCurve",
                                    "data": {
                                        "type": "list",
                                        "values": [
                                            {
                                                "column": "CurveName",
                                                "data": {
                                                    "type": "curveName-v2",
                                                    "values": [],
                                                    "default": null,
                                                    "width": 50,
                                                    "label": "Curve Name",
                                                    "url": {
                                                        "userReadable": "/api/v2/curve-name-reader/get",
                                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                    },
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurvePhase",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "values": [],
                                                    "default": null,
                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                    },
                                                    "label": "Curve Phase",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurveGrain",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "default": null,
                                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-grain"
                                                    },
                                                    "label": "Curve Grain",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            }
                                        ],
                                        "label": "Forward Curve",
                                        "static": true,
                                        "default": [],
                                        "rows": 1,
                                        "dependsOn": "FillForwardStrategy",
                                        "dependState": [
                                            "UseForwardCurve"
                                        ]
                                    }
                                },
                                {
                                    "name": "FillForwardStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "None",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "None",
                                                "value": "None"
                                            },
                                            {
                                                "id": 1,
                                                "name": "PDSH",
                                                "value": "PDSH"
                                            },
                                            {
                                                "id": 3,
                                                "name": "Duplicate Last",
                                                "value": "DuplicateLast"
                                            },
                                            {
                                                "id": 4,
                                                "name": "Use Forward Curve",
                                                "value": "UseForwardCurve"
                                            }
                                        ],
                                        "label": "Fill Forward Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardOffset",
                                    "data": {
                                        "type": "number",
                                        "default": 24,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Fill Forward Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Fill Forward Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "f64f8b90-3649-4dd5-97fa-98809fb12303Curves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "a9bb40c4-0cf4-9290-abb9-4c0464c66b21",
                            "x": 0,
                            "y": 1,
                            "width": 68,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "bf47f0a9-4cac-b337-5517-53a883c0778b",
                            "x": 0,
                            "y": 30,
                            "width": 68,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DAM_loss",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "ef9eed33-bbee-4b72-9995-279518f99123",
                    "x": 481.40625,
                    "y": 283.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "ef9eed33-bbee-4b72-9995-279518f99123",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "ef9eed33-bbee-4b72-9995-279518f99123GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "ef9eed33-bbee-4b72-9995-279518f99123GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "251a0d7b-0248-cd1c-81a2-a7343c4831ca",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "ec577a4f-247c-a0a7-aa78-ae7d56bbd6af",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "57710907-d9a0-4b57-9110-125f78c2d3a9",
                    "x": 479.40625,
                    "y": 812.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "57710907-d9a0-4b57-9110-125f78c2d3a9",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "57710907-d9a0-4b57-9110-125f78c2d3a9GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "57710907-d9a0-4b57-9110-125f78c2d3a9GapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "e4559225-021e-e4c1-8f40-18961485388f",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "f55dd7fa-baee-b33d-0716-9df463c8323a",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8",
                    "x": 637.359375,
                    "y": 809.671875,
                    "width": 117,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ExportForFormula",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "ExportForFormula"
                        },
                        "id": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8",
                        "model": {
                            "name": "Export For Formula",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ExportForFormula",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "ExportForFormula",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "ExportForFormula"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8ExportForFormula",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8ExportForFormula",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "52526a88-662d-7a99-9858-12cbbc1a72a8",
                            "x": 0,
                            "y": 1,
                            "width": 117,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "ExportForFormula",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "55414e05-710e-2be0-3e0c-37a49b864a57",
                            "x": 0,
                            "y": 30,
                            "width": 117,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Export For Formula",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "bdd1a8ff-6c37-4889-941f-ce649de6e4db",
                    "x": 648.40625,
                    "y": 729.265625,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "bdd1a8ff-6c37-4889-941f-ce649de6e4db",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "bdd1a8ff-6c37-4889-941f-ce649de6e4dbScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "bdd1a8ff-6c37-4889-941f-ce649de6e4dbScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "1256832c-2aec-1f9f-f733-12efe1e009e9",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "95ecf3c4-a7e9-276a-317d-1026c628732a",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "c17ea556-5e30-4e67-ae3f-b477fd7c4932",
                    "x": 649.40625,
                    "y": 654.265625,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "c17ea556-5e30-4e67-ae3f-b477fd7c4932",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "c17ea556-5e30-4e67-ae3f-b477fd7c4932Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "c17ea556-5e30-4e67-ae3f-b477fd7c4932Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "838aceaf-6713-f50c-70bd-1be262008537",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "ba29c583-41a6-9431-5a4a-5d45052fd4c3",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "2eb36550-c2ff-4991-ba36-28993e50e51f",
                    "x": 376.546875,
                    "y": 150.90625,
                    "width": 102,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "PredictorType",
                                "data": {
                                    "type": "hidden",
                                    "default": "External",
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Predictor Type",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveLabel",
                                "data": {
                                    "type": "text",
                                    "default": null,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Curve Label",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "CurveName",
                                "data": {
                                    "type": "curveName-v2",
                                    "values": [],
                                    "default": null,
                                    "label": "Curve Name",
                                    "url": {
                                        "userReadable": "/api/v2/curve-name-reader/get",
                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                    },
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurvePhase",
                                "data": {
                                    "type": "enum",
                                    "values": [],
                                    "default": null,
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                    },
                                    "label": "Curve Phase",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "CurveGrain",
                                "data": {
                                    "type": "enum",
                                    "default": null,
                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Curve Grain",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "Simple",
                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "Simple",
                                            "value": "Simple"
                                        },
                                        {
                                            "id": 1,
                                            "name": "Enhanced",
                                            "value": "Enhanced"
                                        }
                                    ],
                                    "label": "Shift Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftOffset",
                                "data": {
                                    "type": "int",
                                    "default": 0,
                                    "placeHolder": "",
                                    "help": " ",
                                    "url": "",
                                    "regex": "",
                                    "label": "Shift Offset",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "ShiftRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Shift Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ShiftWeeklyPattern",
                                "data": {
                                    "type": "bool",
                                    "default": false,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Apply Shift Based On Weekly Pattern",
                                    "dependsOn": "ShiftStrategy",
                                    "dependState": [
                                        "Enhanced"
                                    ],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "ForwardCurve",
                                "data": {
                                    "type": "list",
                                    "values": [
                                        {
                                            "column": "CurveName",
                                            "data": {
                                                "type": "curveName-v2",
                                                "values": [],
                                                "default": null,
                                                "width": 50,
                                                "label": "Curve Name",
                                                "url": {
                                                    "userReadable": "/api/v2/curve-name-reader/get",
                                                    "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                },
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurvePhase",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "values": [],
                                                "default": null,
                                                "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                },
                                                "label": "Curve Phase",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        },
                                        {
                                            "column": "CurveGrain",
                                            "data": {
                                                "type": "enum",
                                                "width": 30,
                                                "default": null,
                                                "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                "url": {
                                                    "url": "/api/v2/job-ui/curve-grain"
                                                },
                                                "label": "Curve Grain",
                                                "dependsOn": "",
                                                "dependState": [],
                                                "placeHolder": ""
                                            }
                                        }
                                    ],
                                    "label": "Forward Curve",
                                    "static": true,
                                    "default": [],
                                    "rows": 1,
                                    "dependsOn": "FillForwardStrategy",
                                    "dependState": [
                                        "UseForwardCurve"
                                    ]
                                }
                            },
                            {
                                "name": "FillForwardStrategy",
                                "data": {
                                    "type": "enum",
                                    "default": "None",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "None",
                                            "value": "None"
                                        },
                                        {
                                            "id": 1,
                                            "name": "PDSH",
                                            "value": "PDSH"
                                        },
                                        {
                                            "id": 3,
                                            "name": "Duplicate Last",
                                            "value": "DuplicateLast"
                                        },
                                        {
                                            "id": 4,
                                            "name": "Use Forward Curve",
                                            "value": "UseForwardCurve"
                                        }
                                    ],
                                    "label": "Fill Forward Strategy",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardOffset",
                                "data": {
                                    "type": "number",
                                    "default": 24,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Fill Forward Offset",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "FillForwardRegion",
                                "data": {
                                    "type": "enum",
                                    "default": "2",
                                    "url": {
                                        "url": "/api/v2/job-ui/curve-grain"
                                    },
                                    "label": "Fill Forward Region",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "EnableVisualization",
                                "data": {
                                    "type": "bool",
                                    "default": true,
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Enable Visualization",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "PredictorType": "External",
                            "CurveLabel": "DAM_Congetion",
                            "CurveName": "MarketData:Node,7105643,Product,2,SubType,3,JsonKey,Congestion",
                            "CurvePhase": "35",
                            "CurveGrain": "2",
                            "ShiftStrategy": "Simple",
                            "ShiftOffset": 0,
                            "ShiftRegion": "2",
                            "ShiftWeeklyPattern": false,
                            "ForwardCurve": [],
                            "FillForwardStrategy": "None",
                            "FillForwardOffset": 24,
                            "FillForwardRegion": "2",
                            "EnableVisualization": true
                        },
                        "id": "2eb36550-c2ff-4991-ba36-28993e50e51f",
                        "model": {
                            "name": "External Predictor",
                            "layout": [
                                {
                                    "name": "PredictorType",
                                    "data": {
                                        "type": "hidden",
                                        "default": "External",
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Predictor Type",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveLabel",
                                    "data": {
                                        "type": "text",
                                        "default": null,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Curve Label",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "CurveName",
                                    "data": {
                                        "type": "curveName-v2",
                                        "values": [],
                                        "default": null,
                                        "label": "Curve Name",
                                        "url": {
                                            "userReadable": "/api/v2/curve-name-reader/get",
                                            "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                        },
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurvePhase",
                                    "data": {
                                        "type": "enum",
                                        "values": [],
                                        "default": null,
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                        },
                                        "label": "Curve Phase",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "CurveGrain",
                                    "data": {
                                        "type": "enum",
                                        "default": null,
                                        "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Curve Grain",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "Simple",
                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "Simple",
                                                "value": "Simple"
                                            },
                                            {
                                                "id": 1,
                                                "name": "Enhanced",
                                                "value": "Enhanced"
                                            }
                                        ],
                                        "label": "Shift Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftOffset",
                                    "data": {
                                        "type": "int",
                                        "default": 0,
                                        "placeHolder": "",
                                        "help": " ",
                                        "url": "",
                                        "regex": "",
                                        "label": "Shift Offset",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "ShiftRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Shift Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ShiftWeeklyPattern",
                                    "data": {
                                        "type": "bool",
                                        "default": false,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Apply Shift Based On Weekly Pattern",
                                        "dependsOn": "ShiftStrategy",
                                        "dependState": [
                                            "Enhanced"
                                        ],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "ForwardCurve",
                                    "data": {
                                        "type": "list",
                                        "values": [
                                            {
                                                "column": "CurveName",
                                                "data": {
                                                    "type": "curveName-v2",
                                                    "values": [],
                                                    "default": null,
                                                    "width": 50,
                                                    "label": "Curve Name",
                                                    "url": {
                                                        "userReadable": "/api/v2/curve-name-reader/get",
                                                        "servlet": "/Trading/DealCapture/backoffice/CurveNameCreatorPage.jsp"
                                                    },
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurvePhase",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "values": [],
                                                    "default": null,
                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                    },
                                                    "label": "Curve Phase",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            },
                                            {
                                                "column": "CurveGrain",
                                                "data": {
                                                    "type": "enum",
                                                    "width": 30,
                                                    "default": null,
                                                    "help": "Curve granularity or timescale of the data, e.g. 5, 15, 30 minutes, hourly etc.",
                                                    "url": {
                                                        "url": "/api/v2/job-ui/curve-grain"
                                                    },
                                                    "label": "Curve Grain",
                                                    "dependsOn": "",
                                                    "dependState": [],
                                                    "placeHolder": ""
                                                }
                                            }
                                        ],
                                        "label": "Forward Curve",
                                        "static": true,
                                        "default": [],
                                        "rows": 1,
                                        "dependsOn": "FillForwardStrategy",
                                        "dependState": [
                                            "UseForwardCurve"
                                        ]
                                    }
                                },
                                {
                                    "name": "FillForwardStrategy",
                                    "data": {
                                        "type": "enum",
                                        "default": "None",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "None",
                                                "value": "None"
                                            },
                                            {
                                                "id": 1,
                                                "name": "PDSH",
                                                "value": "PDSH"
                                            },
                                            {
                                                "id": 3,
                                                "name": "Duplicate Last",
                                                "value": "DuplicateLast"
                                            },
                                            {
                                                "id": 4,
                                                "name": "Use Forward Curve",
                                                "value": "UseForwardCurve"
                                            }
                                        ],
                                        "label": "Fill Forward Strategy",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardOffset",
                                    "data": {
                                        "type": "number",
                                        "default": 24,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Fill Forward Offset",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "FillForwardRegion",
                                    "data": {
                                        "type": "enum",
                                        "default": "2",
                                        "url": {
                                            "url": "/api/v2/job-ui/curve-grain"
                                        },
                                        "label": "Fill Forward Region",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "EnableVisualization",
                                    "data": {
                                        "type": "bool",
                                        "default": true,
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Enable Visualization",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Curves",
                            "grandParent": "Inputs",
                            "outputFan": 1
                        },
                        "type": "Curves"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "2eb36550-c2ff-4991-ba36-28993e50e51fCurves",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "03fe5a1a-dc03-2eb8-20c7-8b221c88fa5b",
                            "x": 0,
                            "y": 1,
                            "width": 102,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Curves",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "a4e43dd3-d3a4-d37c-a751-d51c200c4503",
                            "x": 0,
                            "y": 30,
                            "width": 102,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DAM_Congetion",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "50c22d31-2280-445a-9c48-0c8126fc8dca",
                    "x": 503.40625,
                    "y": 148.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "50c22d31-2280-445a-9c48-0c8126fc8dca",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "50c22d31-2280-445a-9c48-0c8126fc8dcaGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "50c22d31-2280-445a-9c48-0c8126fc8dcaGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "a3daacaf-bd96-77a6-042c-e82111b5a490",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "c364e4c0-bd76-40c7-f284-3754a2f3875d",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "4ecabe18-b2b4-4787-864d-4df13a0923fc",
                    "x": 478.40625,
                    "y": 209.671875,
                    "width": 116,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "GapFilling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "LinearInterpolation",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "HandleNansAtTheBeginning",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheBeginning",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        }
                                                                    ],
                                                                    "default": "Drop",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The Beginning",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "HandleNansAtTheEnd",
                                "data": {
                                    "type": "container",
                                    "default": "",
                                    "placeHolder": "",
                                    "values": [
                                        {
                                            "field": {
                                                "name": "HandleNansAtTheEnd",
                                                "data": {
                                                    "type": "group",
                                                    "values": [
                                                        {
                                                            "field": {
                                                                "name": "Method",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "values": [
                                                                        {
                                                                            "id": 0,
                                                                            "name": "Drop",
                                                                            "value": "Drop"
                                                                        },
                                                                        {
                                                                            "id": 1,
                                                                            "name": "Use Other Phase",
                                                                            "value": "UseOtherPhase"
                                                                        },
                                                                        {
                                                                            "id": 2,
                                                                            "name": "Use Selected Method",
                                                                            "value": "UseSelectedMethod"
                                                                        }
                                                                    ],
                                                                    "default": "UseSelectedMethod",
                                                                    "help": "",
                                                                    "url": "",
                                                                    "regex": "",
                                                                    "label": "Method",
                                                                    "dependsOn": "",
                                                                    "dependState": [],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        },
                                                        {
                                                            "field": {
                                                                "name": "CurvePhase",
                                                                "data": {
                                                                    "type": "enum",
                                                                    "width": 10,
                                                                    "values": [],
                                                                    "default": null,
                                                                    "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                    "url": {
                                                                        "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                    },
                                                                    "regex": "",
                                                                    "label": "Curve Phase",
                                                                    "dependencies": [
                                                                        {
                                                                            "name": "Method",
                                                                            "values": [
                                                                                "UseOtherPhase"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "placeHolder": ""
                                                                }
                                                            },
                                                            "fxFlex": 100
                                                        }
                                                    ],
                                                    "label": "Handle Nans At The End",
                                                    "dependsOn": "",
                                                    "dependState": []
                                                }
                                            },
                                            "fxFlex": 100
                                        }
                                    ],
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "Action": "GapFilling",
                            "Method": "LinearInterpolation",
                            "HandleNansAtTheBeginning": {
                                "Method": "Drop",
                                "CurvePhase": null
                            },
                            "HandleNansAtTheEnd": {
                                "Method": "UseSelectedMethod",
                                "CurvePhase": null
                            }
                        },
                        "id": "4ecabe18-b2b4-4787-864d-4df13a0923fc",
                        "model": {
                            "name": "Linear Interpolation",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "GapFilling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "LinearInterpolation",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheBeginning",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheBeginning",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            }
                                                                        ],
                                                                        "default": "Drop",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The Beginning",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "HandleNansAtTheEnd",
                                    "data": {
                                        "type": "container",
                                        "default": "",
                                        "placeHolder": "",
                                        "values": [
                                            {
                                                "field": {
                                                    "name": "HandleNansAtTheEnd",
                                                    "data": {
                                                        "type": "group",
                                                        "values": [
                                                            {
                                                                "field": {
                                                                    "name": "Method",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "values": [
                                                                            {
                                                                                "id": 0,
                                                                                "name": "Drop",
                                                                                "value": "Drop"
                                                                            },
                                                                            {
                                                                                "id": 1,
                                                                                "name": "Use Other Phase",
                                                                                "value": "UseOtherPhase"
                                                                            },
                                                                            {
                                                                                "id": 2,
                                                                                "name": "Use Selected Method",
                                                                                "value": "UseSelectedMethod"
                                                                            }
                                                                        ],
                                                                        "default": "UseSelectedMethod",
                                                                        "help": "",
                                                                        "url": "",
                                                                        "regex": "",
                                                                        "label": "Method",
                                                                        "dependsOn": "",
                                                                        "dependState": [],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            },
                                                            {
                                                                "field": {
                                                                    "name": "CurvePhase",
                                                                    "data": {
                                                                        "type": "enum",
                                                                        "width": 10,
                                                                        "values": [],
                                                                        "default": null,
                                                                        "help": "Specify the phase of the data curve that the AI model will use for training, indicators or output data.",
                                                                        "url": {
                                                                            "url": "/api/v2/job-ui/curve-phase?includeBest=true"
                                                                        },
                                                                        "regex": "",
                                                                        "label": "Curve Phase",
                                                                        "dependencies": [
                                                                            {
                                                                                "name": "Method",
                                                                                "values": [
                                                                                    "UseOtherPhase"
                                                                                ]
                                                                            }
                                                                        ],
                                                                        "placeHolder": ""
                                                                    }
                                                                },
                                                                "fxFlex": 100
                                                            }
                                                        ],
                                                        "label": "Handle Nans At The End",
                                                        "dependsOn": "",
                                                        "dependState": []
                                                    }
                                                },
                                                "fxFlex": 100
                                            }
                                        ],
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "type": "GapFilling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "GapFilling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "4ecabe18-b2b4-4787-864d-4df13a0923fcGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "4ecabe18-b2b4-4787-864d-4df13a0923fcGapFilling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "10ad6bc3-8e7d-e068-205d-d6dec22fa9b4",
                            "x": 0,
                            "y": 1,
                            "width": 116,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "GapFilling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "c8575796-497a-a34a-010d-47c8b998ef71",
                            "x": 0,
                            "y": 30,
                            "width": 116,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Linear Interpolation",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "66ef8d46-7607-443e-9f25-c418f968ccde",
                    "x": 649.40625,
                    "y": 142.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "66ef8d46-7607-443e-9f25-c418f968ccde",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "66ef8d46-7607-443e-9f25-c418f968ccdeScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "66ef8d46-7607-443e-9f25-c418f968ccdeScaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "3809d958-ea3d-26b2-f292-219081a99f17",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "ea8d002b-c80c-e5f3-bd79-a6c5beceaded",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "e1c853c2-f524-4222-b9c9-5d2b57924519",
                    "x": 640.40625,
                    "y": 215.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "e1c853c2-f524-4222-b9c9-5d2b57924519",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "e1c853c2-f524-4222-b9c9-5d2b57924519Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "e1c853c2-f524-4222-b9c9-5d2b57924519Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "08f1c495-e01c-86e5-fc14-cceaeaf84c7f",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "19d068a4-657f-87c9-fd96-82442575466c",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3",
                    "x": 646.40625,
                    "y": 281.671875,
                    "width": 100,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "Action",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "Scaling",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Action",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            },
                            {
                                "name": "Method",
                                "data": {
                                    "type": "hidden",
                                    "values": [],
                                    "default": "ZScore",
                                    "help": "",
                                    "url": "",
                                    "regex": "",
                                    "label": "Method",
                                    "dependsOn": "",
                                    "dependState": [],
                                    "placeHolder": ""
                                }
                            }
                        ],
                        "data": {
                            "Action": "Scaling",
                            "Method": "ZScore"
                        },
                        "id": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3",
                        "model": {
                            "name": "Z-Score Scaling",
                            "layout": [
                                {
                                    "name": "Action",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "Scaling",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Action",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                },
                                {
                                    "name": "Method",
                                    "data": {
                                        "type": "hidden",
                                        "values": [],
                                        "default": "ZScore",
                                        "help": "",
                                        "url": "",
                                        "regex": "",
                                        "label": "Method",
                                        "dependsOn": "",
                                        "dependState": [],
                                        "placeHolder": ""
                                    }
                                }
                            ],
                            "type": "Scaling",
                            "inputFan": 1,
                            "outputFan": 10
                        },
                        "type": "Scaling"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 1,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3Scaling",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(3,102,214,1)",
                    "stroke": 1,
                    "radius": 6,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "5f9fdd54-0575-dfa6-c6ca-8175cd9209a1",
                            "x": 0,
                            "y": 1,
                            "width": 100,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "795750a1-b39d-653a-2521-80cdc7f2acfd",
                            "x": 0,
                            "y": 30,
                            "width": 100,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Z-Score Scaling",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "draw2d.Connection",
                    "id": "776e9c8f-40a1-b8d6-3485-86db6fac4689",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 595.40625,
                            "y": 840.671875
                        },
                        {
                            "x": 637.359375,
                            "y": 837.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "57710907-d9a0-4b57-9110-125f78c2d3a9",
                        "port": "output"
                    },
                    "target": {
                        "node": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "3aad4d79-ec07-b215-325f-7da62f900bff",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 478.546875,
                            "y": 178.90625
                        },
                        {
                            "x": 503.40625,
                            "y": 176.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "2eb36550-c2ff-4991-ba36-28993e50e51f",
                        "port": "output"
                    },
                    "target": {
                        "node": "50c22d31-2280-445a-9c48-0c8126fc8dca",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "ae1116c3-82c9-c947-994c-ef735ba87909",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 619.40625,
                            "y": 176.671875
                        },
                        {
                            "x": 649.40625,
                            "y": 170.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "50c22d31-2280-445a-9c48-0c8126fc8dca",
                        "port": "output"
                    },
                    "target": {
                        "node": "66ef8d46-7607-443e-9f25-c418f968ccde",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "9f2cfd81-1753-d5d0-97d4-edd72cb6484e",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 595.40625,
                            "y": 388.671875
                        },
                        {
                            "x": 646.40625,
                            "y": 388.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "515e8242-3a11-45f5-9a4d-8dbd4a84bfcc",
                        "port": "output"
                    },
                    "target": {
                        "node": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "cc6ac327-d571-364c-bf67-1924795ed65b",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 425.40625,
                            "y": 838.671875
                        },
                        {
                            "x": 479.40625,
                            "y": 840.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "290641a0-46b3-477a-ada8-f5ce21830020",
                        "port": "output"
                    },
                    "target": {
                        "node": "57710907-d9a0-4b57-9110-125f78c2d3a9",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "0cdb3b42-9584-9d6b-a8c1-747b3137725d",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 443.359375,
                            "y": 308.671875
                        },
                        {
                            "x": 481.40625,
                            "y": 311.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "f64f8b90-3649-4dd5-97fa-98809fb12303",
                        "port": "output"
                    },
                    "target": {
                        "node": "ef9eed33-bbee-4b72-9995-279518f99123",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "5f9ee306-1195-5faf-3e74-b6f9b265efd0",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 428.40625,
                            "y": 460.671875
                        },
                        {
                            "x": 478.40625,
                            "y": 460.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "21a1ff6a-d37a-480c-8098-1dc25725cd33",
                        "port": "output"
                    },
                    "target": {
                        "node": "d937774c-4cbd-4791-92c7-65c4c23ff2ec",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "6494d74a-6b12-04be-1cb9-b36261633ebf",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 597.40625,
                            "y": 311.671875
                        },
                        {
                            "x": 646.40625,
                            "y": 309.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "ef9eed33-bbee-4b72-9995-279518f99123",
                        "port": "output"
                    },
                    "target": {
                        "node": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "ca5f46d4-f6e6-4a4f-4638-d02dc980ca37",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 754.359375,
                            "y": 837.671875
                        },
                        {
                            "x": 802.40625,
                            "y": 838.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "8ec3ce9d-a5fd-42f0-9967-d31d926571b8",
                        "port": "output"
                    },
                    "target": {
                        "node": "efbbf854-61c0-480a-9b7d-e1f1b2e4fd41",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "57ed9a11-6667-f5ff-0af0-305288bb0bb8",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 594.40625,
                            "y": 535.671875
                        },
                        {
                            "x": 645.40625,
                            "y": 535.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4",
                        "port": "output"
                    },
                    "target": {
                        "node": "36025adf-3a32-4e64-a303-f4017c0f5b81",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "34c6e73f-ef53-2b4a-1399-b22b59f3c5b6",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 594.40625,
                            "y": 237.671875
                        },
                        {
                            "x": 640.40625,
                            "y": 243.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "4ecabe18-b2b4-4787-864d-4df13a0923fc",
                        "port": "output"
                    },
                    "target": {
                        "node": "e1c853c2-f524-4222-b9c9-5d2b57924519",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "862c923f-0ee0-dcf4-5606-d20597a123fd",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 434.40625,
                            "y": 760.671875
                        },
                        {
                            "x": 648.40625,
                            "y": 757.265625
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "2b181fb9-a851-4cca-8343-9da9e1b7a0da",
                        "port": "output"
                    },
                    "target": {
                        "node": "bdd1a8ff-6c37-4889-941f-ce649de6e4db",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "783cc928-951d-766c-a554-b467877add09",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 594.40625,
                            "y": 610.671875
                        },
                        {
                            "x": 645.40625,
                            "y": 610.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "16360eb5-8835-42d9-bd2c-889d7ed33d97",
                        "port": "output"
                    },
                    "target": {
                        "node": "6feff562-875e-43fd-9547-61cd333d1c74",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "cc2108a8-ff27-02c3-63ac-0a1ad625ab8c",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 429.40625,
                            "y": 238.671875
                        },
                        {
                            "x": 478.40625,
                            "y": 237.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "39cdac16-6c77-4cd9-9293-2c6ce0f24272",
                        "port": "output"
                    },
                    "target": {
                        "node": "4ecabe18-b2b4-4787-864d-4df13a0923fc",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "66565e34-49b6-30d4-3466-b15de9612d5e",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 594.40625,
                            "y": 460.671875
                        },
                        {
                            "x": 645.40625,
                            "y": 460.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "d937774c-4cbd-4791-92c7-65c4c23ff2ec",
                        "port": "output"
                    },
                    "target": {
                        "node": "24f79e34-45d0-4d82-ba2e-1b007c77265a",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "9707c33e-6d54-06d5-9a41-eba1e4715b10",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 458.40625,
                            "y": 609.671875
                        },
                        {
                            "x": 478.40625,
                            "y": 610.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "4706b3c9-521d-45be-9e31-9f6bf22769d1",
                        "port": "output"
                    },
                    "target": {
                        "node": "16360eb5-8835-42d9-bd2c-889d7ed33d97",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "6d39bb82-4fbd-851f-d532-d13cc1e9f447",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 429.40625,
                            "y": 388.671875
                        },
                        {
                            "x": 479.40625,
                            "y": 388.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "c84811a1-aee9-4969-95ba-95a57e792cea",
                        "port": "output"
                    },
                    "target": {
                        "node": "515e8242-3a11-45f5-9a4d-8dbd4a84bfcc",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "9f04663d-47e5-fe28-8a32-ba5a0224bc22",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 428.40625,
                            "y": 535.671875
                        },
                        {
                            "x": 478.40625,
                            "y": 535.671875
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "c67bd03a-a960-437d-977d-d32a377e8c83",
                        "port": "output"
                    },
                    "target": {
                        "node": "3a3b240e-cec3-4d7a-a3e2-743b925d1fb4",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "b16bb9da-8e1c-3ff7-ff32-2aedf8c04386",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 428.40625,
                            "y": 685.671875
                        },
                        {
                            "x": 649.40625,
                            "y": 682.265625
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "796f2b6d-6206-4e81-91a0-719452915c49",
                        "port": "output"
                    },
                    "target": {
                        "node": "c17ea556-5e30-4e67-ae3f-b477fd7c4932",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "083ca9a7-87e8-2250-844e-9b19dbf14e2e",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 749.40625,
                            "y": 170.671875
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.DirectRouter",
                    "radius": 3,
                    "source": {
                        "node": "66ef8d46-7607-443e-9f25-c418f968ccde",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "3da13ac6-4ab0-a12b-6a1d-f2a141075ae4",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 746.40625,
                            "y": 388.671875
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "5bf35bf2-2f9e-45e6-b91d-c5df400e0dc4",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "1daf1820-0012-b873-3dea-709b3033b2ac",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 749.40625,
                            "y": 682.265625
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "c17ea556-5e30-4e67-ae3f-b477fd7c4932",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "11e8b51a-e027-f122-4a33-65ef2f05aee0",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 745.40625,
                            "y": 610.671875
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "6feff562-875e-43fd-9547-61cd333d1c74",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "68931959-92d4-281b-279d-4f59e2353289",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 748.40625,
                            "y": 757.265625
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "bdd1a8ff-6c37-4889-941f-ce649de6e4db",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "0adf343d-0ecf-0b36-1112-f1bace9d2ab3",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.VertexSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 740.40625,
                            "y": 243.671875
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.VertexRouter",
                    "radius": 3,
                    "source": {
                        "node": "e1c853c2-f524-4222-b9c9-5d2b57924519",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                },
                {
                    "type": "draw2d.Connection",
                    "id": "095474da-50f9-417f-2e10-f878e073fccb",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 746.40625,
                            "y": 309.671875
                        },
                        {
                            "x": 1008.3937377929688,
                            "y": 582.8718872070312
                        }
                    ],
                    "router": "draw2d.layout.connection.DirectRouter",
                    "radius": 3,
                    "source": {
                        "node": "77ee0edc-a69b-4b34-ac1d-a1b2a35351a3",
                        "port": "output"
                    },
                    "target": {
                        "node": "1e46c6d6-21d4-4e9a-8c0c-3461720ead69",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                }
            ]
        },
        "ai": {
            "draw2dStructure": [
                {
                    "type": "VerticalLayout",
                    "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                    "x": 218.59375,
                    "y": 44.625,
                    "width": 71,
                    "height": 56,
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "booster",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "gbtree",
                                            "value": "gbtree"
                                        },
                                        {
                                            "id": 1,
                                            "name": "dart",
                                            "value": "dart"
                                        },
                                        {
                                            "id": 2,
                                            "name": "gblinear",
                                            "value": "gblinear"
                                        }
                                    ],
                                    "default": "gbtree",
                                    "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Booster",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "n_estimators",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Number Of Estimator",
                                    "default": 100,
                                    "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Number of Estimators",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "learning_rate",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Learning Rate",
                                    "default": 0.3,
                                    "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Learning Rate",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "gamma",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "gamma",
                                    "default": 0,
                                    "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Gamma",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_depth",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Max Depth",
                                    "default": 6,
                                    "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Depth",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "min_child_weight",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Min Child Weight",
                                    "default": 1,
                                    "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                    "url": "",
                                    "regex": "",
                                    "label": "Min Child Weight",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "max_delta_step",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Max Delta Step",
                                    "default": 0,
                                    "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Max Delta Step",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "subsample",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Subsample",
                                    "default": 1,
                                    "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Subsample",
                                    "dependsOn": "booster",
                                    "dependState": [
                                        "dart",
                                        "gbtree"
                                    ]
                                }
                            },
                            {
                                "name": "reg_lambda",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Lambda",
                                    "default": 0,
                                    "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L2 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "reg_alpha",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Alpha",
                                    "default": 0,
                                    "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                    "url": "",
                                    "regex": "",
                                    "label": "L1 Regularization Coefficient",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "base_score",
                                "data": {
                                    "type": "float",
                                    "placeHolder": "Base Score",
                                    "default": 0.5,
                                    "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Base Score",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "eval_metric",
                                "data": {
                                    "type": "enum",
                                    "values": [
                                        {
                                            "id": 0,
                                            "name": "rmse",
                                            "value": "rmse"
                                        },
                                        {
                                            "id": 1,
                                            "name": "rmsle",
                                            "value": "rmsle"
                                        },
                                        {
                                            "id": 2,
                                            "name": "mae",
                                            "value": "mae"
                                        },
                                        {
                                            "id": 3,
                                            "name": "mape",
                                            "value": "mape"
                                        }
                                    ],
                                    "default": "rmse",
                                    "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                    "url": "",
                                    "regex": "",
                                    "label": "Evaluation Metric",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            },
                            {
                                "name": "random_state",
                                "data": {
                                    "type": "int",
                                    "placeHolder": "Seed",
                                    "default": 0,
                                    "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Seed",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "name": "XGBoost",
                            "type": "Ensemble",
                            "config": {
                                "booster": "gbtree",
                                "n_estimators": 200,
                                "learning_rate": 0.3,
                                "gamma": 0.8,
                                "max_depth": 6,
                                "min_child_weight": 1,
                                "max_delta_step": 0,
                                "subsample": 0.9,
                                "reg_lambda": 0,
                                "reg_alpha": 0,
                                "objective": "reg:squarederror",
                                "base_score": 0.5,
                                "eval_metric": "rmse",
                                "seed": 0,
                                "random_state": 0
                            }
                        },
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "model": {
                            "name": "XGBoost",
                            "layout": [
                                {
                                    "name": "booster",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "gbtree",
                                                "value": "gbtree"
                                            },
                                            {
                                                "id": 1,
                                                "name": "dart",
                                                "value": "dart"
                                            },
                                            {
                                                "id": 2,
                                                "name": "gblinear",
                                                "value": "gblinear"
                                            }
                                        ],
                                        "default": "gbtree",
                                        "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Booster",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "n_estimators",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Number Of Estimator",
                                        "default": 100,
                                        "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Number of Estimators",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "learning_rate",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Learning Rate",
                                        "default": 0.3,
                                        "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Learning Rate",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "gamma",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "gamma",
                                        "default": 0,
                                        "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Gamma",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_depth",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Max Depth",
                                        "default": 6,
                                        "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Depth",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "min_child_weight",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Min Child Weight",
                                        "default": 1,
                                        "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                        "url": "",
                                        "regex": "",
                                        "label": "Min Child Weight",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_delta_step",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Max Delta Step",
                                        "default": 0,
                                        "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Delta Step",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "subsample",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Subsample",
                                        "default": 1,
                                        "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Subsample",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "reg_lambda",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Lambda",
                                        "default": 0,
                                        "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L2 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "reg_alpha",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Alpha",
                                        "default": 0,
                                        "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L1 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "base_score",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Base Score",
                                        "default": 0.5,
                                        "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Base Score",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "eval_metric",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "rmse",
                                                "value": "rmse"
                                            },
                                            {
                                                "id": 1,
                                                "name": "rmsle",
                                                "value": "rmsle"
                                            },
                                            {
                                                "id": 2,
                                                "name": "mae",
                                                "value": "mae"
                                            },
                                            {
                                                "id": 3,
                                                "name": "mape",
                                                "value": "mape"
                                            }
                                        ],
                                        "default": "rmse",
                                        "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Evaluation Metric",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "random_state",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Seed",
                                        "default": 0,
                                        "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Seed",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "nodeData": {
                                "name": "XGBoost",
                                "type": "Ensemble",
                                "config": {
                                    "booster": "gbtree",
                                    "n_estimators": 100,
                                    "learning_rate": 0.3,
                                    "gamma": 0,
                                    "max_depth": 6,
                                    "min_child_weight": 1,
                                    "max_delta_step": 0,
                                    "subsample": 1,
                                    "reg_lambda": 0,
                                    "reg_alpha": 0,
                                    "objective": "reg:squarederror",
                                    "base_score": 0.5,
                                    "eval_metric": "rmse",
                                    "seed": 0
                                }
                            },
                            "type": "Ensemble",
                            "multiple": false,
                            "inputFan": 100,
                            "outputFan": 10
                        },
                        "header": "Ensemble"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.InputPort",
                            "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_InputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 100,
                            "name": "input0",
                            "semanticGroup": "global",
                            "port": "draw2d.InputPort",
                            "locator": "draw2d.layout.locator.InputPortLocator",
                            "locatorAttr": {}
                        },
                        {
                            "type": "draw2d.OutputPort",
                            "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 10,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(0,0,0,1)",
                    "stroke": 1,
                    "radius": 5,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "3e6f82ae-f81e-3c11-14ae-6afa9db4331d",
                            "x": 0,
                            "y": 1,
                            "width": 71,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Ensemble",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "9b2bde84-caac-1664-0ecf-1292abd59ff6",
                            "x": 0,
                            "y": 30,
                            "width": 71,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "XGBoost",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "VerticalLayout",
                    "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                    "x": 20,
                    "y": 20,
                    "width": 78,
                    "height": 56,
                    "alpha": 1,
                    "selectable": false,
                    "draggable": false,
                    "angle": 0,
                    "userData": {
                        "layout": [
                            {
                                "name": "name",
                                "data": {
                                    "type": "text",
                                    "default": "",
                                    "help": "Name of the Data Frame, use names without whitespace, instead of whitespace use underscore.\nWe recommended to keep the system provided default names for consitency. The name should just consist of lower and upper case letters and numbers without whitespace.\nThese are valid names: Input, InputLayer, inputLayer \nNote that Layer's name should be UNIQUE.",
                                    "url": "",
                                    "regex": "",
                                    "label": "Name",
                                    "dependsOn": "",
                                    "dependState": []
                                }
                            }
                        ],
                        "data": {
                            "name": "DataFrame",
                            "class_name": "DataFrame",
                            "config": {
                                "batch_input_shape": [],
                                "dtype": "float32",
                                "sparse": false,
                                "name": "DataFrame"
                            },
                            "inbound_nodes": []
                        },
                        "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "type": "DataFrame"
                    },
                    "cssClass": "labelModel",
                    "ports": [
                        {
                            "type": "draw2d.OutputPort",
                            "id": "e8e5afdb-7c1b-4df2-9581-54593398ff1c",
                            "width": 10,
                            "height": 10,
                            "alpha": 1,
                            "selectable": false,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "draw2d_OutputPort",
                            "bgColor": "rgba(79,104,112,1)",
                            "color": "rgba(27,27,27,1)",
                            "stroke": 1,
                            "dasharray": null,
                            "maxFanOut": 100,
                            "name": "output",
                            "semanticGroup": "global",
                            "port": "draw2d.OutputPort",
                            "locator": "draw2d.layout.locator.OutputPortLocator",
                            "locatorAttr": {}
                        }
                    ],
                    "bgColor": "rgba(3,102,214,1)",
                    "color": "rgba(0,0,0,1)",
                    "stroke": 1,
                    "radius": 5,
                    "dasharray": null,
                    "gap": 0,
                    "labels": [
                        {
                            "type": "TooltipFigure",
                            "id": "5a058d6e-0982-2510-226f-15b34ecac6c1",
                            "x": 0,
                            "y": 1,
                            "width": 78,
                            "height": 29,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "labelModelHeader",
                            "ports": [],
                            "bgColor": "rgba(3,102,214,1)",
                            "color": "rgba(255,255,255,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "DataFrame",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(255,255,255,1)",
                            "fontFamily": null
                        },
                        {
                            "type": "TooltipFigure",
                            "id": "c6f63e7d-ca5d-37f2-d8a3-c07b04590d89",
                            "x": 0,
                            "y": 30,
                            "width": 78,
                            "height": 25,
                            "alpha": 1,
                            "selectable": true,
                            "draggable": true,
                            "angle": 0,
                            "userData": {},
                            "cssClass": "TooltipFigure",
                            "ports": [],
                            "bgColor": "rgba(255,255,255,1)",
                            "color": "rgba(0,0,0,1)",
                            "stroke": 0,
                            "radius": 6,
                            "dasharray": null,
                            "text": "Input2",
                            "outlineStroke": 0,
                            "outlineColor": "rgba(0,0,0,0)",
                            "fontSize": 12,
                            "fontColor": "rgba(0,0,0,1)",
                            "fontFamily": null
                        }
                    ]
                },
                {
                    "type": "draw2d.Connection",
                    "id": "e827b8d6-5079-3929-594f-4854394770fa",
                    "alpha": 1,
                    "selectable": true,
                    "draggable": true,
                    "angle": 0,
                    "userData": {},
                    "cssClass": "draw2d_Connection",
                    "stroke": 2,
                    "color": "rgba(18,156,228,1)",
                    "outlineStroke": 0,
                    "outlineColor": "rgba(0,0,0,0)",
                    "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                    "vertex": [
                        {
                            "x": 98,
                            "y": 48
                        },
                        {
                            "x": 158.296875,
                            "y": 48
                        },
                        {
                            "x": 158.296875,
                            "y": 72.625
                        },
                        {
                            "x": 218.59375,
                            "y": 72.625
                        }
                    ],
                    "router": "draw2d.layout.connection.ManhattanBridgedConnectionRouter",
                    "radius": 3,
                    "source": {
                        "node": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "port": "output"
                    },
                    "target": {
                        "node": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "port": "input0",
                        "decoration": "draw2d.decoration.connection.ArrowDecorator"
                    }
                }
            ],
            "model_structure": {
                "booster": "gbtree",
                "n_estimators": 200,
                "learning_rate": 0.3,
                "gamma": 0.8,
                "max_depth": 6,
                "min_child_weight": 1,
                "max_delta_step": 0,
                "subsample": 0.9,
                "reg_lambda": 0,
                "reg_alpha": 0,
                "objective": "reg:squarederror",
                "base_score": 0.5,
                "eval_metric": "rmse",
                "seed": 0,
                "random_state": 0
            },
            "model_config": null,
            "model_type": "XGBoost",
            "Input_structure": [
                {
                    "data_frame": {
                        "Label": "Input2",
                        "window_size": 1
                    },
                    "inputs": [
                        "XGBoost"
                    ]
                }
            ],
            "newConvertor": {
                "draw2dStructure": [
                    {
                        "type": "VerticalLayout",
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "x": 218.59375,
                        "y": 44.625,
                        "width": 71,
                        "height": 56,
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {
                            "layout": [
                                {
                                    "name": "booster",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "gbtree",
                                                "value": "gbtree"
                                            },
                                            {
                                                "id": 1,
                                                "name": "dart",
                                                "value": "dart"
                                            },
                                            {
                                                "id": 2,
                                                "name": "gblinear",
                                                "value": "gblinear"
                                            }
                                        ],
                                        "default": "gbtree",
                                        "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Booster",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "n_estimators",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Number Of Estimator",
                                        "default": 100,
                                        "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Number of Estimators",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "learning_rate",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Learning Rate",
                                        "default": 0.3,
                                        "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Learning Rate",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "gamma",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "gamma",
                                        "default": 0,
                                        "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Gamma",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_depth",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Max Depth",
                                        "default": 6,
                                        "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Depth",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "min_child_weight",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Min Child Weight",
                                        "default": 1,
                                        "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                        "url": "",
                                        "regex": "",
                                        "label": "Min Child Weight",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "max_delta_step",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Max Delta Step",
                                        "default": 0,
                                        "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Max Delta Step",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "subsample",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Subsample",
                                        "default": 1,
                                        "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Subsample",
                                        "dependsOn": "booster",
                                        "dependState": [
                                            "dart",
                                            "gbtree"
                                        ]
                                    }
                                },
                                {
                                    "name": "reg_lambda",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Lambda",
                                        "default": 0,
                                        "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L2 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "reg_alpha",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Alpha",
                                        "default": 0,
                                        "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                        "url": "",
                                        "regex": "",
                                        "label": "L1 Regularization Coefficient",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "base_score",
                                    "data": {
                                        "type": "float",
                                        "placeHolder": "Base Score",
                                        "default": 0.5,
                                        "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Base Score",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "eval_metric",
                                    "data": {
                                        "type": "enum",
                                        "values": [
                                            {
                                                "id": 0,
                                                "name": "rmse",
                                                "value": "rmse"
                                            },
                                            {
                                                "id": 1,
                                                "name": "rmsle",
                                                "value": "rmsle"
                                            },
                                            {
                                                "id": 2,
                                                "name": "mae",
                                                "value": "mae"
                                            },
                                            {
                                                "id": 3,
                                                "name": "mape",
                                                "value": "mape"
                                            }
                                        ],
                                        "default": "rmse",
                                        "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                        "url": "",
                                        "regex": "",
                                        "label": "Evaluation Metric",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                },
                                {
                                    "name": "random_state",
                                    "data": {
                                        "type": "int",
                                        "placeHolder": "Seed",
                                        "default": 0,
                                        "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Seed",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "data": {
                                "name": "XGBoost",
                                "type": "Ensemble",
                                "config": {
                                    "booster": "gbtree",
                                    "n_estimators": 200,
                                    "learning_rate": 0.3,
                                    "gamma": 0.8,
                                    "max_depth": 6,
                                    "min_child_weight": 1,
                                    "max_delta_step": 0,
                                    "subsample": 0.9,
                                    "reg_lambda": 0,
                                    "reg_alpha": 0,
                                    "objective": "reg:squarederror",
                                    "base_score": 0.5,
                                    "eval_metric": "rmse",
                                    "seed": 0,
                                    "random_state": 0
                                }
                            },
                            "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                            "model": {
                                "name": "XGBoost",
                                "layout": [
                                    {
                                        "name": "booster",
                                        "data": {
                                            "type": "enum",
                                            "values": [
                                                {
                                                    "id": 0,
                                                    "name": "gbtree",
                                                    "value": "gbtree"
                                                },
                                                {
                                                    "id": 1,
                                                    "name": "dart",
                                                    "value": "dart"
                                                },
                                                {
                                                    "id": 2,
                                                    "name": "gblinear",
                                                    "value": "gblinear"
                                                }
                                            ],
                                            "default": "gbtree",
                                            "help": "Choose which booster to use. Can be “gbtree“, “gblinear“ or “dart“. Note that “gbtree“ and “dart“ use tree based models while “gblinear“ uses linear functions. \nWe recommend to use “gbtree“ for financial data.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Booster",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "n_estimators",
                                        "data": {
                                            "type": "int",
                                            "placeHolder": "Number Of Estimator",
                                            "default": 100,
                                            "help": "Choose the number of small estimators in the system.\n100 is the recommended value. By increasing this number the run time is increase and there might also be chances for overfit with. \nNumber of Estimators and Max Depth move in opposite directions and can compensate each other: In a trade-off either large number of estimators (e.g. 300) can be combined with smaller Max Depth values (e.g. 3) or smaller number of estimators (e.g. 70) can be combined with larger Max Depth Values (e.g. 7)",
                                            "url": "",
                                            "regex": "",
                                            "label": "Number of Estimators",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "learning_rate",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Learning Rate",
                                            "default": 0.3,
                                            "help": "The learning rate is a hyperparameter that controls how much to change the model in response to the estimated error each time the model weights are updated.\n \n0.1 is the recommended value. Low numbers will cause the model to stop before complete learning, and high numbers can cause the model to become unstable.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Learning Rate",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "gamma",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "gamma",
                                            "default": 0,
                                            "help": "Gamma is a parameter such that if Loss > Gamma, the model spit the tree leafs, and if Loss < Gamma, no action is taken. As Gamma increases the model loses sensitivity to loss. We therefore seek Gamma to be small, but not too small so as to not overfit. The range is from 0 to infinity. We recommend to start with 0.8.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Gamma",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "max_depth",
                                        "data": {
                                            "type": "int",
                                            "placeHolder": "Max Depth",
                                            "default": 6,
                                            "help": "Maximum Depth the tree can have. Number of conditions in the tree grows exponentially with this value. Recommended value is 6.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Max Depth",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "min_child_weight",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Min Child Weight",
                                            "default": 1,
                                            "help": "Minimum sum of weights of all observations required in a child. \nHigher values prevent a model from learning relations which might be highly specific to the particular sample selected for a tree. \nToo high values can lead to under-fitting. \nRecommended value is 1",
                                            "url": "",
                                            "regex": "",
                                            "label": "Min Child Weight",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "max_delta_step",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Max Delta Step",
                                            "default": 0,
                                            "help": "This parameter limits the maximum step size for each tree weight change. If the value of this parameter is zero there is no limitations or constraints on the base estimators.\nRecommended value is 0.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Max Delta Step",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "subsample",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Subsample",
                                            "default": 1,
                                            "help": "Subsampling ratio of the training dataset. Setting it to 0.5 means that XGBoost would randomly sample half of the training data.\nRecommended value for time series data is 1 (do not sample), and 0.5 for non time series data.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Subsample",
                                            "dependsOn": "booster",
                                            "dependState": [
                                                "dart",
                                                "gbtree"
                                            ]
                                        }
                                    },
                                    {
                                        "name": "reg_lambda",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Lambda",
                                            "default": 0,
                                            "help": "This L2 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                            "url": "",
                                            "regex": "",
                                            "label": "L2 Regularization Coefficient",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "reg_alpha",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Alpha",
                                            "default": 0,
                                            "help": "This L1 Regularizer Coefficient is the penalty that prevents higher weight values. When the model is complex, there is higher risk of overfitting, and this coefficient can help to decrease this risk.\n \nRecommended value is 1. Larger regularizer coefficients will prevent the AI model to modify weights far from zero, causing underfitting.",
                                            "url": "",
                                            "regex": "",
                                            "label": "L1 Regularization Coefficient",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "base_score",
                                        "data": {
                                            "type": "float",
                                            "placeHolder": "Base Score",
                                            "default": 0.5,
                                            "help": "Set the initial prediction score of all instances. This parameter has less impact when the data set is large as in price and load forecasting. Recommended value = 0.5.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Base Score",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "eval_metric",
                                        "data": {
                                            "type": "enum",
                                            "values": [
                                                {
                                                    "id": 0,
                                                    "name": "rmse",
                                                    "value": "rmse"
                                                },
                                                {
                                                    "id": 1,
                                                    "name": "rmsle",
                                                    "value": "rmsle"
                                                },
                                                {
                                                    "id": 2,
                                                    "name": "mae",
                                                    "value": "mae"
                                                },
                                                {
                                                    "id": 3,
                                                    "name": "mape",
                                                    "value": "mape"
                                                }
                                            ],
                                            "default": "rmse",
                                            "help": "Loss function is used to determine the error or loss between the output of the model and the given target value.\nSuggested options is “RMSE“ (Root Mean Squared Error). Other possible options are MAE (mean absolute error)  and “RMSLE“ (Root Mean Squared Log Error)",
                                            "url": "",
                                            "regex": "",
                                            "label": "Evaluation Metric",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    },
                                    {
                                        "name": "random_state",
                                        "data": {
                                            "type": "int",
                                            "placeHolder": "Seed",
                                            "default": 0,
                                            "help": "Enter any integer number as the random number generation seed for weights and bias initialization.  During backtest  do not change this number across multiple runs so that results are reproducible. Finally  to check the model's stability with regard to random initialization, change this number. If results do not vary significantly the mode is stable.",
                                            "url": "",
                                            "regex": "",
                                            "label": "Seed",
                                            "dependsOn": "",
                                            "dependState": []
                                        }
                                    }
                                ],
                                "nodeData": {
                                    "name": "XGBoost",
                                    "type": "Ensemble",
                                    "config": {
                                        "booster": "gbtree",
                                        "n_estimators": 100,
                                        "learning_rate": 0.3,
                                        "gamma": 0,
                                        "max_depth": 6,
                                        "min_child_weight": 1,
                                        "max_delta_step": 0,
                                        "subsample": 1,
                                        "reg_lambda": 0,
                                        "reg_alpha": 0,
                                        "objective": "reg:squarederror",
                                        "base_score": 0.5,
                                        "eval_metric": "rmse",
                                        "seed": 0
                                    }
                                },
                                "type": "Ensemble",
                                "multiple": false,
                                "inputFan": 100,
                                "outputFan": 10
                            },
                            "header": "Ensemble"
                        },
                        "cssClass": "labelModel",
                        "ports": [
                            {
                                "type": "draw2d.InputPort",
                                "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                                "width": 10,
                                "height": 10,
                                "alpha": 1,
                                "selectable": false,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "draw2d_InputPort",
                                "bgColor": "rgba(79,104,112,1)",
                                "color": "rgba(27,27,27,1)",
                                "stroke": 1,
                                "dasharray": null,
                                "maxFanOut": 100,
                                "name": "input0",
                                "semanticGroup": "global",
                                "port": "draw2d.InputPort",
                                "locator": "draw2d.layout.locator.InputPortLocator",
                                "locatorAttr": {}
                            },
                            {
                                "type": "draw2d.OutputPort",
                                "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aacEnsemble",
                                "width": 10,
                                "height": 10,
                                "alpha": 1,
                                "selectable": false,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "draw2d_OutputPort",
                                "bgColor": "rgba(79,104,112,1)",
                                "color": "rgba(27,27,27,1)",
                                "stroke": 1,
                                "dasharray": null,
                                "maxFanOut": 10,
                                "name": "output",
                                "semanticGroup": "global",
                                "port": "draw2d.OutputPort",
                                "locator": "draw2d.layout.locator.OutputPortLocator",
                                "locatorAttr": {}
                            }
                        ],
                        "bgColor": "rgba(3,102,214,1)",
                        "color": "rgba(0,0,0,1)",
                        "stroke": 1,
                        "radius": 5,
                        "dasharray": null,
                        "gap": 0,
                        "labels": [
                            {
                                "type": "TooltipFigure",
                                "id": "3e6f82ae-f81e-3c11-14ae-6afa9db4331d",
                                "x": 0,
                                "y": 1,
                                "width": 71,
                                "height": 29,
                                "alpha": 1,
                                "selectable": true,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "labelModelHeader",
                                "ports": [],
                                "bgColor": "rgba(3,102,214,1)",
                                "color": "rgba(255,255,255,1)",
                                "stroke": 0,
                                "radius": 6,
                                "dasharray": null,
                                "text": "Ensemble",
                                "outlineStroke": 0,
                                "outlineColor": "rgba(0,0,0,0)",
                                "fontSize": 12,
                                "fontColor": "rgba(255,255,255,1)",
                                "fontFamily": null
                            },
                            {
                                "type": "TooltipFigure",
                                "id": "9b2bde84-caac-1664-0ecf-1292abd59ff6",
                                "x": 0,
                                "y": 30,
                                "width": 71,
                                "height": 25,
                                "alpha": 1,
                                "selectable": true,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "TooltipFigure",
                                "ports": [],
                                "bgColor": "rgba(255,255,255,1)",
                                "color": "rgba(0,0,0,1)",
                                "stroke": 0,
                                "radius": 6,
                                "dasharray": null,
                                "text": "XGBoost",
                                "outlineStroke": 0,
                                "outlineColor": "rgba(0,0,0,0)",
                                "fontSize": 12,
                                "fontColor": "rgba(0,0,0,1)",
                                "fontFamily": null
                            }
                        ]
                    },
                    {
                        "type": "VerticalLayout",
                        "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "x": 20,
                        "y": 20,
                        "width": 78,
                        "height": 56,
                        "alpha": 1,
                        "selectable": false,
                        "draggable": false,
                        "angle": 0,
                        "userData": {
                            "layout": [
                                {
                                    "name": "name",
                                    "data": {
                                        "type": "text",
                                        "default": "",
                                        "help": "Name of the Data Frame, use names without whitespace, instead of whitespace use underscore.\nWe recommended to keep the system provided default names for consitency. The name should just consist of lower and upper case letters and numbers without whitespace.\nThese are valid names: Input, InputLayer, inputLayer \nNote that Layer's name should be UNIQUE.",
                                        "url": "",
                                        "regex": "",
                                        "label": "Name",
                                        "dependsOn": "",
                                        "dependState": []
                                    }
                                }
                            ],
                            "data": {
                                "name": "DataFrame",
                                "class_name": "DataFrame",
                                "config": {
                                    "batch_input_shape": [],
                                    "dtype": "float32",
                                    "sparse": false,
                                    "name": "DataFrame"
                                },
                                "inbound_nodes": []
                            },
                            "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                            "type": "DataFrame"
                        },
                        "cssClass": "labelModel",
                        "ports": [
                            {
                                "type": "draw2d.OutputPort",
                                "id": "e8e5afdb-7c1b-4df2-9581-54593398ff1c",
                                "width": 10,
                                "height": 10,
                                "alpha": 1,
                                "selectable": false,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "draw2d_OutputPort",
                                "bgColor": "rgba(79,104,112,1)",
                                "color": "rgba(27,27,27,1)",
                                "stroke": 1,
                                "dasharray": null,
                                "maxFanOut": 100,
                                "name": "output",
                                "semanticGroup": "global",
                                "port": "draw2d.OutputPort",
                                "locator": "draw2d.layout.locator.OutputPortLocator",
                                "locatorAttr": {}
                            }
                        ],
                        "bgColor": "rgba(3,102,214,1)",
                        "color": "rgba(0,0,0,1)",
                        "stroke": 1,
                        "radius": 5,
                        "dasharray": null,
                        "gap": 0,
                        "labels": [
                            {
                                "type": "TooltipFigure",
                                "id": "5a058d6e-0982-2510-226f-15b34ecac6c1",
                                "x": 0,
                                "y": 1,
                                "width": 78,
                                "height": 29,
                                "alpha": 1,
                                "selectable": true,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "labelModelHeader",
                                "ports": [],
                                "bgColor": "rgba(3,102,214,1)",
                                "color": "rgba(255,255,255,1)",
                                "stroke": 0,
                                "radius": 6,
                                "dasharray": null,
                                "text": "DataFrame",
                                "outlineStroke": 0,
                                "outlineColor": "rgba(0,0,0,0)",
                                "fontSize": 12,
                                "fontColor": "rgba(255,255,255,1)",
                                "fontFamily": null
                            },
                            {
                                "type": "TooltipFigure",
                                "id": "c6f63e7d-ca5d-37f2-d8a3-c07b04590d89",
                                "x": 0,
                                "y": 30,
                                "width": 78,
                                "height": 25,
                                "alpha": 1,
                                "selectable": true,
                                "draggable": true,
                                "angle": 0,
                                "userData": {},
                                "cssClass": "TooltipFigure",
                                "ports": [],
                                "bgColor": "rgba(255,255,255,1)",
                                "color": "rgba(0,0,0,1)",
                                "stroke": 0,
                                "radius": 6,
                                "dasharray": null,
                                "text": "Input2",
                                "outlineStroke": 0,
                                "outlineColor": "rgba(0,0,0,0)",
                                "fontSize": 12,
                                "fontColor": "rgba(0,0,0,1)",
                                "fontFamily": null
                            }
                        ]
                    },
                    {
                        "type": "draw2d.Connection",
                        "id": "e827b8d6-5079-3929-594f-4854394770fa",
                        "alpha": 1,
                        "selectable": true,
                        "draggable": true,
                        "angle": 0,
                        "userData": {},
                        "cssClass": "draw2d_Connection",
                        "stroke": 2,
                        "color": "rgba(18,156,228,1)",
                        "outlineStroke": 0,
                        "outlineColor": "rgba(0,0,0,0)",
                        "policy": "draw2d.policy.line.LineSelectionFeedbackPolicy",
                        "vertex": [
                            {
                                "x": 98,
                                "y": 48
                            },
                            {
                                "x": 158.296875,
                                "y": 48
                            },
                            {
                                "x": 158.296875,
                                "y": 72.625
                            },
                            {
                                "x": 218.59375,
                                "y": 72.625
                            }
                        ],
                        "router": "draw2d.layout.connection.ManhattanBridgedConnectionRouter",
                        "radius": 3,
                        "source": {
                            "node": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                            "port": "output"
                        },
                        "target": {
                            "node": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                            "port": "input0",
                            "decoration": "draw2d.decoration.connection.ArrowDecorator"
                        }
                    }
                ],
                "blocks": [
                    {
                        "id": "f89a1b5c-46a7-4999-b787-a263a9ef4aac",
                        "data": {
                            "name": "XGBoost",
                            "type": "Ensemble",
                            "config": {
                                "booster": "gbtree",
                                "n_estimators": 200,
                                "learning_rate": 0.3,
                                "gamma": 0.8,
                                "max_depth": 6,
                                "min_child_weight": 1,
                                "max_delta_step": 0,
                                "subsample": 0.9,
                                "reg_lambda": 0,
                                "reg_alpha": 0,
                                "objective": "reg:squarederror",
                                "base_score": 0.5,
                                "eval_metric": "rmse",
                                "seed": 0,
                                "random_state": 0
                            }
                        }
                    },
                    {
                        "id": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "data": {
                            "name": "DataFrame",
                            "class_name": "DataFrame",
                            "config": {
                                "batch_input_shape": [],
                                "dtype": "float32",
                                "sparse": false,
                                "name": "DataFrame"
                            },
                            "inbound_nodes": []
                        }
                    }
                ],
                "connections": [
                    {
                        "source": "b8a65492-0628-4e78-8b8c-1ea249d19fc5",
                        "target": "f89a1b5c-46a7-4999-b787-a263a9ef4aac"
                    }
                ],
                "dataFrames": [
                    {
                        "data_frame": {
                            "Label": "Input2",
                            "window_size": 1
                        },
                        "inputs": [
                            "XGBoost"
                        ]
                    }
                ]
            }
        },
        "runDiagnostics": false,
        "independentRun": false,
        "jobId": 1644,
        "runId": 332844,
        "version": 2
    }
}
}
